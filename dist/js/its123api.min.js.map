{"version":3,"sources":["webpack:///its123api.min.js","webpack:///webpack/bootstrap 762c30392d17f32cd684?b62a*","webpack:///./src/main.js","webpack:///./src/util/promise.js?f80b*","webpack:///./src/Api/Its123.js?eeca*","webpack:///./src/util/request.js?0ff7*","webpack:///./src/util/storage.js?75dd*","webpack:///./~/process/browser.js?82e4*","webpack:///./~/regenerator-runtime/runtime.js?1aab*"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_Its","_Its2","window","Its123","14","timeoutPromise","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","error","Error","status","then","res","clearTimeout","err","tryAtMost","maxRetries","timeout","fn","timeoutFactor","arguments","length","undefined","current","retryUntilResolved","Object","defineProperty","value","23","_asyncToGenerator","gen","apply","this","step","key","arg","info","done","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_request","_request2","_promise","_storage","_storage2","defaultApiConfig","domain","version","logLevel","elements","instrumentFormSelector","loadingElementId","productElementId","reportElementId","prefetchResourceElementId","loadingElement","productElement","reportElement","maxHttpRetries","retryDelay","maxSubmitRetries","storageEnabled","storagePrefix","apiKey","productId","epochStart","epochCompleted","apiConfig","api","endpoint","document","getElementById","prefetchResourceElement","eventListeners","store","loadProduct","_x2","_x3","_ref","regeneratorRuntime","mark","_callee","_ref2","_ref2$renderReport","renderReport","_ref2$user","user","wrap","_context","prev","next","currentEpochTime","loadAndRunProduct","abrupt","sent","t0","clearProduct","handleException","stop","prefetchProduct","_x5","_x6","_ref3","_callee2","resources","product","form","_ref4","_ref4$renderReport","_ref4$user","_context2","JSON","parse","atob","loadResources","runResourceFunctions","loadInstrumentStateFromStorage","bindInstrumentStorageListeners","waitForInstrumentToSubmit","removeByPrefix","restartProduct","_x8","_x9","_ref5","_callee3","_ref6","_ref6$renderReport","_ref6$user","_context3","_x11","_x12","_x13","_ref7","_callee4","_ref8","_ref8$renderReport","_ref8$user","prefetchedForm","_context4","style","display","requestProduct","saveProduct","runProduct","_x16","_x17","_x18","_ref9","_callee5","instruments","accessCode","result","_ref11","body","_this","_ref10","_ref10$renderReport","_context5","product_access_code","slots","respondent","triggerEvent","filter","loadInstrumentStatus","access_code","requestInstrument","processApiInstrumentResponse","console","log","requestReport","reports","loadReport","_x21","_x22","_ref12","_callee6","_ref14","_this2","_ref13","metaData","metaHmac","_context6","_x24","_x25","_ref15","_callee7","_ref16","_ref16$form","_context7","t1","t2","processFormSubmit","t3","saveInstrumentStatus","renderInstrument","t4","t5","t6","_x26","_x27","_ref17","_callee9","lastError","_loop","_ret","_this3","submittedForm","_context9","_callee8","_ref18","_context8","submitInstrumentData","v","delegateYield","_x29","_x30","_ref19","_callee10","headers","response","json","_context10","Content-Type","X-123test-ApiKey","X-123test-ProductId","method","mode","requestProductInfo","_x31","_ref20","_callee11","_context11","_x32","_ref21","_callee12","_context12","cache","X-123test-InstrumentRun","text","get","className","loadingIcon","querySelector","button","classList","contains","disabled","innerHTML","getAttribute","innerText","remove","addEventListener","event","preventDefault","add","setAttribute","_x33","_x34","_ref22","_callee13","_context13","FormData","X-123test-epochStart","X-123test-epochEnd","prefix","_this4","getElementsByTagName","_loop2","e","input","type","checked","set","name","_this5","keys","forEach","resource","its123","func","_x35","_x36","_ref23","_callee14","url","_ref24","_ref24$metaData","_ref24$metaHmac","_context14","_x38","_x39","_x40","_ref25","_callee15","param","_context15","message","location","hostname","typeName","report","find","r","eventName","data","listeners","l","now","Date","epoch","Math","round","getTime","callback","_this6","events","Array","isArray","push","all","map","resourceItem","head","querySelectorAll","path","script","createElement","src","async","onload","appendChild","cssLink","rel","media","href","24","checkStatus","statusText","request","options","fetch","25","ClientStorage","enabled","localStorage","storeEnabled","testItem","setItem","removeItem","productData","started","stringify","expirationTime","item","getItem","startsWith","productJson","32","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","Item","array","noop","process","nextTick","args","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","33","global","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","bind","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","returnMethod","GenStateSuspendedYield","resultName","nextLoc","_sent","dispatchException","ContinueSentinel","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","$Symbol","toStringTagSymbol","toStringTag","inModule","runtime","Gp","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","iter","toString","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown"],"mappings":"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","file":"its123api.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Its = __webpack_require__(23);\n\t\n\tvar _Its2 = _interopRequireDefault(_Its);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// Bind Its123 to the global window\n\twindow.Its123 = _Its2['default'];\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.timeoutPromise = timeoutPromise;\n\texports.tryAtMost = tryAtMost;\n\texports.retryUntilResolved = retryUntilResolved;\n\t/**\n\t * Promise with timeout function\n\t * @param  {Number} ms      Miliseconds to wait before promise is rejected\n\t * @param  {Promise} promise The promise to run\n\t * @return {Promise}         Promise with timeout\n\t */\n\tfunction timeoutPromise(ms, promise) {\n\t  return new Promise(function (resolve, reject) {\n\t    // Create timer that rejects promise after ms miliseconds\n\t    var timeoutId = setTimeout(function () {\n\t      var error = new Error('timeout');\n\t      error.status = 408;\n\t      reject(error);\n\t    }, ms);\n\t\n\t    // Clear timeout if promise resolves/rejects on its own\n\t    promise.then(function (res) {\n\t      clearTimeout(timeoutId);\n\t      resolve(res);\n\t    }, function (err) {\n\t      clearTimeout(timeoutId);\n\t      reject(err);\n\t    });\n\t  });\n\t}\n\t\n\t/**\n\t * Decorates a promis-creating function with a retry functionality (by recursion)\n\t * @param  {Number}   maxRetries  Max number of retries\n\t * @param  {Number}   timeout     Miliseconds to wait\n\t * @param  {Function} fn          Function that creates and returns a promise\n\t * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n\t * @param  {Number}   [current=0] Current iteration in the retry loop\n\t * @return {Promise}\n\t */\n\tfunction tryAtMost(maxRetries, timeout, fn) {\n\t  var timeoutFactor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\t  var current = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    return fn().then(resolve)['catch'](function (error) {\n\t      if (current < maxRetries) {\n\t        setTimeout(function () {\n\t          return resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1));\n\t        }, timeout);\n\t      } else {\n\t        reject(error);\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction retryUntilResolved(fn) {\n\t  return new Promise(function (resolve) {\n\t    return fn().then(resolve)['catch'](function () {\n\t      return resolve(retryUntilResolved(fn));\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\test Api v2\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\tauthor Wouter Bulten <github.com/wouterbulten>\n\tauthor Theo den Hollander <github.com/theodenhollander>\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license\n\the MIT License (MIT)\n\tn\topyright (c) 2015 123test\n\tn\termission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * in the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\tn\tn\tn\tn\tn\tn\tn\tn\tn\t\n\t__webpack_require__(33);\n\t\n\tvar _request = __webpack_require__(24);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tvar _promise = __webpack_require__(14);\n\t\n\tvar _storage = __webpack_require__(25);\n\t\n\tvar _storage2 = _interopRequireDefault(_storage);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Default configuration for api, can be overriden by user\n\t * @type {Object}\n\t */\n\tvar defaultApiConfig = {\n\t  // Domain config\n\t  domain: 'https://api.123test.com',\n\t  version: 'v2',\n\t\n\t  // Environment config\n\t  logLevel: 'all', // One of: all, info, error, none\n\t\n\t  // DOM config\n\t  elements: {\n\t    // Selector used to bind events to instrument forms, we advise\n\t    // not to alter this selector.\n\t    instrumentFormSelector: 'form.its123-instrument',\n\t    // ID for the loading div\n\t    loadingElementId: 'its123api-loading',\n\t    // ID for the instrument/product div\n\t    productElementId: 'its123api-product',\n\t    // ID for the report div\n\t    reportElementId: 'its123api-report',\n\t    // ID for the prefetch resource\n\t    prefetchResourceElementId: 'its123api-prefetch-resource-data',\n\t\n\t    // Internal placeholders for the DOM elements, do not set these to any values\n\t    loadingElement: null,\n\t    productElement: null,\n\t    reportElement: null\n\t  },\n\t\n\t  // Number of retries some fetch request may make\n\t  maxHttpRetries: 2,\n\t  // Initial delay before a retry\n\t  retryDelay: 8000,\n\t  // Number of times a user can try to resubmit a form\n\t  maxSubmitRetries: 10,\n\t\n\t  // Whether to use localStorage for caching\n\t  storageEnabled: true,\n\t  storagePrefix: 'its123Api',\n\t\n\t  // Public api key used for every request\n\t  apiKey: 'not-set',\n\t\n\t  // loaded product ID\n\t  productId: 'not-set',\n\t\n\t  // Epoch time user\n\t  epochStart: null,\n\t  epochCompleted: null\n\t};\n\t\n\t/**\n\t * Main API class\n\t */\n\t\n\tvar Its123 = function () {\n\t\n\t  /**\n\t   * Create new Api object\n\t   * @param  {Object} [apiConfig={}] Api configuration\n\t   * @return {void}\n\t   */\n\t  function Its123() {\n\t    var apiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Its123);\n\t\n\t    // Set api config to default and override with parameters\n\t    this.api = _extends({}, defaultApiConfig, apiConfig);\n\t    // Construct correct api end point\n\t    this.api.endpoint = this.api.domain + '/' + this.api.version;\n\t\n\t    // Check for valid api key\n\t    if (this.api.apiKey === 'not-set') {\n\t      throw new Error('Api key must be set when initalising Its123 object. Please check your api config.');\n\t    }\n\t\n\t    // Query the DOM and set options\n\t    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n\t    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n\t    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n\t    this.api.elements.prefetchResourceElement = document.getElementById(this.api.elements.prefetchResourceElementId);\n\t\n\t    if (!this.api.elements.loadingElement || !this.api.elements.productElement || !this.api.elements.reportElement) {\n\t      throw new Error('Element for loading, product or report not found. Please check your HTML and Api config.');\n\t    }\n\t\n\t    // Placeholder for eventlisteners\n\t    this.eventListeners = {};\n\t\n\t    // Create new storage object for localStorage functionality\n\t    this.store = new _storage2['default'](this.api.storageEnabled, this.api.storagePrefix);\n\t  }\n\t\n\t  /**\n\t   * Wrapper around loadAndRunProduct with error handling\n\t   *\n\t   * @param  {String} productId product to load\n\t   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n\t   * @return {Promise}\n\t   * @see loadAndRunProduct()\n\t   */\n\t\n\t\n\t  _createClass(Its123, [{\n\t    key: 'loadProduct',\n\t    value: function () {\n\t      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(productId) {\n\t        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref2$renderReport = _ref2.renderReport,\n\t            renderReport = _ref2$renderReport === undefined ? true : _ref2$renderReport,\n\t            _ref2$user = _ref2.user,\n\t            user = _ref2$user === undefined ? '' : _ref2$user;\n\t\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                _context.prev = 0;\n\t\n\t                this.api.epochStart = this.currentEpochTime();\n\t                this.api.productId = productId;\n\t                _context.next = 5;\n\t                return this.loadAndRunProduct(productId, { renderReport: renderReport, user: user });\n\t\n\t              case 5:\n\t                return _context.abrupt('return', _context.sent);\n\t\n\t              case 8:\n\t                _context.prev = 8;\n\t                _context.t0 = _context['catch'](0);\n\t\n\t                // Something could be wrong with our local store,\n\t                // clear it to prevent any future errors\n\t                this.store.clearProduct(productId);\n\t                this.handleException('loadProduct', _context.t0, { productId: productId, renderReport: renderReport, user: user });\n\t\n\t                throw _context.t0;\n\t\n\t              case 13:\n\t              case 'end':\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee, this, [[0, 8]]);\n\t      }));\n\t\n\t      function loadProduct(_x2, _x3) {\n\t        return _ref.apply(this, arguments);\n\t      }\n\t\n\t      return loadProduct;\n\t    }()\n\t\n\t    /**\n\t     * Start a product run given an prefetched insrument\n\t     * @param  {String} productId product to load\n\t     * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n\t     * @return {Promise}\n\t     * @see loadAndRunProduct()\n\t     */\n\t\n\t  }, {\n\t    key: 'prefetchProduct',\n\t    value: function () {\n\t      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(productId) {\n\t        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref4$renderReport = _ref4.renderReport,\n\t            renderReport = _ref4$renderReport === undefined ? true : _ref4$renderReport,\n\t            _ref4$user = _ref4.user,\n\t            user = _ref4$user === undefined ? '' : _ref4$user;\n\t\n\t        var resources, product, form;\n\t        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t          while (1) {\n\t            switch (_context2.prev = _context2.next) {\n\t              case 0:\n\t\n\t                // Load prefetched resource data\n\t                this.api.epochStart = this.currentEpochTime();\n\t\n\t                if (!this.api.elements.prefetchResourceElement) {\n\t                  _context2.next = 7;\n\t                  break;\n\t                }\n\t\n\t                resources = JSON.parse(atob(this.api.elements.prefetchResourceElement.value));\n\t                _context2.next = 5;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 5:\n\t                _context2.next = 7;\n\t                return this.runResourceFunctions(resources);\n\t\n\t              case 7:\n\t\n\t                // First check for existing run in storage\n\t                product = this.store.loadProduct(productId, user);\n\t\n\t                if (!product) {\n\t                  _context2.next = 10;\n\t                  break;\n\t                }\n\t\n\t                return _context2.abrupt('return', this.loadProduct(productId, { renderReport: renderReport, user: user }));\n\t\n\t              case 10:\n\t                _context2.prev = 10;\n\t\n\t                // Enable localstorage support for anonymous instruments\n\t                // Use the product key as the id to prevent loading data from other products\n\t                this.loadInstrumentStateFromStorage('st-' + productId);\n\t                this.bindInstrumentStorageListeners('st-' + productId);\n\t\n\t                // Wait for prefetched instrument to submit\n\t                _context2.next = 15;\n\t                return this.waitForInstrumentToSubmit();\n\t\n\t              case 15:\n\t                form = _context2.sent;\n\t\n\t\n\t                // Clear local storage from temporary instrument data\n\t                this.store.removeByPrefix('st-' + productId);\n\t\n\t                return _context2.abrupt('return', this.loadAndRunProduct(productId, { renderReport: renderReport, user: user }, form));\n\t\n\t              case 20:\n\t                _context2.prev = 20;\n\t                _context2.t0 = _context2['catch'](10);\n\t\n\t                // Something could be wrong with our local store,\n\t                // clear it to prevent any future errors\n\t                this.store.clearProduct(productId);\n\t\n\t                throw _context2.t0;\n\t\n\t              case 24:\n\t              case 'end':\n\t                return _context2.stop();\n\t            }\n\t          }\n\t        }, _callee2, this, [[10, 20]]);\n\t      }));\n\t\n\t      function prefetchProduct(_x5, _x6) {\n\t        return _ref3.apply(this, arguments);\n\t      }\n\t\n\t      return prefetchProduct;\n\t    }()\n\t\n\t    /**\n\t     * Restarts a product by clearing any local data\n\t     *\n\t     * @param  {String} productId product to load\n\t     * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n\t     * @return {Promise}\n\t     * @see loadAndRunProduct()\n\t     */\n\t\n\t  }, {\n\t    key: 'restartProduct',\n\t    value: function () {\n\t      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(productId) {\n\t        var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref6$renderReport = _ref6.renderReport,\n\t            renderReport = _ref6$renderReport === undefined ? true : _ref6$renderReport,\n\t            _ref6$user = _ref6.user,\n\t            user = _ref6$user === undefined ? '' : _ref6$user;\n\t\n\t        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t          while (1) {\n\t            switch (_context3.prev = _context3.next) {\n\t              case 0:\n\t                this.store.clearProduct(productId);\n\t                return _context3.abrupt('return', this.loadProduct(productId, { renderReport: renderReport, user: user }));\n\t\n\t              case 2:\n\t              case 'end':\n\t                return _context3.stop();\n\t            }\n\t          }\n\t        }, _callee3, this);\n\t      }));\n\t\n\t      function restartProduct(_x8, _x9) {\n\t        return _ref5.apply(this, arguments);\n\t      }\n\t\n\t      return restartProduct;\n\t    }()\n\t\n\t    /**\n\t     * Load and run a product\n\t     *\n\t     * Runs all the required sub steps from instrument to report. All promises are chained\n\t     * and the final promise returns the product data when resolved.\n\t     *\n\t     * Will automatically render the first report that is available. Set `renderReport` to false\n\t     * to counter this behaviour.\n\t     *\n\t     * Data structure of the product object:\n\t     *\n\t     * product = {\n\t     *  slots: {\n\t     *    instruments: [],\n\t     *    respondent: {},\n\t     *  },\n\t     *  reports: [],\n\t     *  access_code: null,\n\t     * };\n\t     *\n\t     * @param  {String} productId product to load\n\t     * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n\t     *                                       report render functions\n\t     * @param  {String}  [user=''] Optional user UUID\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadAndRunProduct',\n\t    value: function () {\n\t      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(productId) {\n\t        var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref8$renderReport = _ref8.renderReport,\n\t            renderReport = _ref8$renderReport === undefined ? true : _ref8$renderReport,\n\t            _ref8$user = _ref8.user,\n\t            user = _ref8$user === undefined ? '' : _ref8$user;\n\t\n\t        var prefetchedForm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t        var product;\n\t        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t          while (1) {\n\t            switch (_context4.prev = _context4.next) {\n\t              case 0:\n\t                product = null;\n\t\n\t                // Show loading div (only when not in prefetch mode)\n\t\n\t                if (!prefetchedForm) {\n\t                  this.api.elements.productElement.style.display = 'none';\n\t                  this.api.elements.loadingElement.style.display = 'block';\n\t                }\n\t\n\t                // Try to load product information from local storage, if it fails\n\t                // fall back to a API request\n\t                product = this.store.loadProduct(productId, user);\n\t\n\t                if (product) {\n\t                  _context4.next = 8;\n\t                  break;\n\t                }\n\t\n\t                _context4.next = 6;\n\t                return this.requestProduct(productId, user);\n\t\n\t              case 6:\n\t                product = _context4.sent;\n\t\n\t\n\t                // Store the requested product in the local store for future requests\n\t                this.store.saveProduct(productId, product, user);\n\t\n\t              case 8:\n\t                _context4.next = 10;\n\t                return this.runProduct(productId, { renderReport: renderReport }, prefetchedForm);\n\t\n\t              case 10:\n\t                return _context4.abrupt('return', _context4.sent);\n\t\n\t              case 11:\n\t              case 'end':\n\t                return _context4.stop();\n\t            }\n\t          }\n\t        }, _callee4, this);\n\t      }));\n\t\n\t      function loadAndRunProduct(_x11, _x12, _x13) {\n\t        return _ref7.apply(this, arguments);\n\t      }\n\t\n\t      return loadAndRunProduct;\n\t    }()\n\t\n\t    /**\n\t     * Run a product\n\t     *\n\t     * Runs all the required sub steps from instrument to report. All promises are chained\n\t     * and the final promise returns the product data when resolved.\n\t     *\n\t     * Will automatically render the first report that is available. Set `renderReport` to false\n\t     * to counter this behaviour.\n\t     *\n\t     * Data structure of the product object:\n\t     *\n\t     * product = {\n\t     *  slots: {\n\t     *    instruments: [],\n\t     *    respondent: {},\n\t     *  },\n\t     *  reports: [],\n\t     *  access_code: null,\n\t     * };\n\t     *\n\t     * @param  {Object} product object to load\n\t     * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n\t     *                                       report render functions\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'runProduct',\n\t    value: function () {\n\t      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(product) {\n\t        var _this = this;\n\t\n\t        var _ref10 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref10$renderReport = _ref10.renderReport,\n\t            renderReport = _ref10$renderReport === undefined ? true : _ref10$renderReport;\n\t\n\t        var prefetchedForm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t\n\t        var instruments, i, accessCode, result, _ref11, body, resources;\n\t\n\t        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t          while (1) {\n\t            switch (_context5.prev = _context5.next) {\n\t              case 0:\n\t\n\t                // Show loading div (only when not in prefetch mode)\n\t                if (!prefetchedForm) {\n\t                  this.api.elements.productElement.style.display = 'none';\n\t                  this.api.elements.loadingElement.style.display = 'block';\n\t                }\n\t\n\t                this.store.saveProduct(product.product_access_code, product, product.slots.respondent);\n\t\n\t                this.triggerEvent('product-loaded', product);\n\t                instruments = product.slots.instruments;\n\t\n\t                this.triggerEvent('instruments-loaded', instruments);\n\t\n\t                // Filter any instruments that already have been completed\n\t                // Prevents unnecessary requests to the API\n\t                instruments = instruments.filter(function (i) {\n\t                  var status = _this.store.loadInstrumentStatus(i.access_code);\n\t\n\t                  switch (status) {\n\t                    case 'ended-items':\n\t                    case 'ended-skipped':\n\t                    case 'ended-time':\n\t                      _this.triggerEvent('instrument-already-completed', { accessCode: i.access_code, status: status });\n\t                      return false;\n\t                    case 'in-progress':\n\t                      _this.triggerEvent('instrument-continue', { accessCode: i.access_code, status: status });\n\t                      return true;\n\t                    case 'started':\n\t                    default:\n\t                      return true;\n\t                  }\n\t                });\n\t\n\t                i = 0;\n\t\n\t              case 7:\n\t                if (!(i < instruments.length)) {\n\t                  _context5.next = 24;\n\t                  break;\n\t                }\n\t\n\t                accessCode = instruments[i].access_code;\n\t                result = void 0;\n\t\n\t                if (!(i === 0 && prefetchedForm)) {\n\t                  _context5.next = 15;\n\t                  break;\n\t                }\n\t\n\t                // Skip requesting the instrument when it is the first and a prefetched\n\t                // form is on the page.\n\t                this.triggerEvent('instrument-prefetched', {});\n\t                result = { status: 'prefetched', form: prefetchedForm };\n\t                _context5.next = 19;\n\t                break;\n\t\n\t              case 15:\n\t                _context5.next = 17;\n\t                return this.requestInstrument(accessCode);\n\t\n\t              case 17:\n\t                result = _context5.sent;\n\t\n\t                this.triggerEvent('instrument-started', { accessCode: accessCode, status: result.status });\n\t\n\t              case 19:\n\t                _context5.next = 21;\n\t                return this.processApiInstrumentResponse(accessCode, result);\n\t\n\t              case 21:\n\t                i += 1;\n\t                _context5.next = 7;\n\t                break;\n\t\n\t              case 24:\n\t\n\t                console.log('Render report:  ' + renderReport + ', Product:');\n\t                console.log(product);\n\t\n\t                if (!renderReport) {\n\t                  _context5.next = 39;\n\t                  break;\n\t                }\n\t\n\t                _context5.next = 29;\n\t                return this.requestReport(product.reports[0].access_code);\n\t\n\t              case 29:\n\t                _ref11 = _context5.sent;\n\t                body = _ref11.body;\n\t                resources = _ref11.resources;\n\t                _context5.next = 34;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 34:\n\t                this.renderReport(body);\n\t                this.runResourceFunctions(resources);\n\t                this.triggerEvent('report-ready');\n\t                _context5.next = 40;\n\t                break;\n\t\n\t              case 39:\n\t                console.log('Render report is not loaded.');\n\t\n\t              case 40:\n\t\n\t                // Remove this session from the local storage\n\t                this.store.clearProduct(product.product_access_code);\n\t                // Trigger event and pass product info\n\t                this.triggerEvent('product-completed', product);\n\t\n\t                return _context5.abrupt('return', product);\n\t\n\t              case 43:\n\t              case 'end':\n\t                return _context5.stop();\n\t            }\n\t          }\n\t        }, _callee5, this);\n\t      }));\n\t\n\t      function runProduct(_x16, _x17, _x18) {\n\t        return _ref9.apply(this, arguments);\n\t      }\n\t\n\t      return runProduct;\n\t    }()\n\t\n\t    /**\n\t     * Load an render a report by its access code\n\t     * @param  {String} accessCode Access code for report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadReport',\n\t    value: function () {\n\t      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(accessCode) {\n\t        var _this2 = this;\n\t\n\t        var _ref13 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            metaData = _ref13.metaData,\n\t            metaHmac = _ref13.metaHmac;\n\t\n\t        var _ref14, body, resources;\n\t\n\t        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t          while (1) {\n\t            switch (_context6.prev = _context6.next) {\n\t              case 0:\n\t                _context6.prev = 0;\n\t                _context6.next = 3;\n\t                return (0, _promise.tryAtMost)(this.api.maxHttpRetries, this.api.retryDelay, function () {\n\t                  return _this2.requestReport(accessCode, { metaData: metaData, metaHmac: metaHmac });\n\t                });\n\t\n\t              case 3:\n\t                _ref14 = _context6.sent;\n\t                body = _ref14.body;\n\t                resources = _ref14.resources;\n\t                _context6.next = 8;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 8:\n\t                this.renderReport(body);\n\t                this.runResourceFunctions(resources);\n\t                this.triggerEvent('report-ready');\n\t                _context6.next = 17;\n\t                break;\n\t\n\t              case 13:\n\t                _context6.prev = 13;\n\t                _context6.t0 = _context6['catch'](0);\n\t\n\t                this.handleException('loadReport', _context6.t0, { accessCode: accessCode, metaData: metaData, metaHmac: metaHmac });\n\t\n\t                throw _context6.t0;\n\t\n\t              case 17:\n\t              case 'end':\n\t                return _context6.stop();\n\t            }\n\t          }\n\t        }, _callee6, this, [[0, 13]]);\n\t      }));\n\t\n\t      function loadReport(_x21, _x22) {\n\t        return _ref12.apply(this, arguments);\n\t      }\n\t\n\t      return loadReport;\n\t    }()\n\t\n\t    /**\n\t     * Process a single API response from an instrument call\n\t     *\n\t     * When the instrument is still running the function will return a new Promise\n\t     * that waits for a form submit.\n\t     *\n\t     * @param  {String} accessCode Access code for this instrument\n\t     * @param  {String} status     Current instrument status\n\t     * @param  {Array} resources  Resources to load\n\t     * @param  {String} body       Html to put in the DOM\n\t     * @param  {Object} form      (Optional) submitted form+event object for prefetch requests\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'processApiInstrumentResponse',\n\t    value: function () {\n\t      var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(accessCode, _ref16) {\n\t        var status = _ref16.status,\n\t            resources = _ref16.resources,\n\t            body = _ref16.body,\n\t            _ref16$form = _ref16.form,\n\t            form = _ref16$form === undefined ? null : _ref16$form;\n\t        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n\t          while (1) {\n\t            switch (_context7.prev = _context7.next) {\n\t              case 0:\n\t                _context7.t0 = status;\n\t                _context7.next = _context7.t0 === 'prefetched' ? 3 : _context7.t0 === 'started' ? 13 : _context7.t0 === 'in-progress' ? 13 : _context7.t0 === 'ended-items' ? 30 : _context7.t0 === 'ended-skipped' ? 30 : _context7.t0 === 'ended-time' ? 30 : 33;\n\t                break;\n\t\n\t              case 3:\n\t                if (form) {\n\t                  _context7.next = 5;\n\t                  break;\n\t                }\n\t\n\t                throw new Error('Cannot handle prefetch state without existing instrument form');\n\t\n\t              case 5:\n\t                _context7.t1 = this;\n\t                _context7.t2 = accessCode;\n\t                _context7.next = 9;\n\t                return this.processFormSubmit(accessCode, form);\n\t\n\t              case 9:\n\t                _context7.t3 = _context7.sent;\n\t                _context7.next = 12;\n\t                return _context7.t1.processApiInstrumentResponse.call(_context7.t1, _context7.t2, _context7.t3);\n\t\n\t              case 12:\n\t                return _context7.abrupt('return', _context7.sent);\n\t\n\t              case 13:\n\t                this.api.epochStart = this.currentEpochTime();\n\t                this.store.saveInstrumentStatus(accessCode, status);\n\t\n\t                // Wait for resources to load\n\t                _context7.next = 17;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 17:\n\t\n\t                this.renderInstrument(body);\n\t\n\t                // Try to load item data from local storage\n\t                this.loadInstrumentStateFromStorage(accessCode);\n\t                this.bindInstrumentStorageListeners(accessCode);\n\t\n\t                this.runResourceFunctions(resources);\n\t                this.triggerEvent('instrument-submitted');\n\t                // Run function again until instrument has ended\n\t                _context7.t4 = this;\n\t                _context7.t5 = accessCode;\n\t                _context7.next = 26;\n\t                return this.processFormSubmit(accessCode);\n\t\n\t              case 26:\n\t                _context7.t6 = _context7.sent;\n\t                _context7.next = 29;\n\t                return _context7.t4.processApiInstrumentResponse.call(_context7.t4, _context7.t5, _context7.t6);\n\t\n\t              case 29:\n\t                return _context7.abrupt('return', _context7.sent);\n\t\n\t              case 30:\n\t                this.store.saveInstrumentStatus(accessCode, status);\n\t                this.triggerEvent('instrument-completed', { accessCode: accessCode, status: status });\n\t                return _context7.abrupt('break', 34);\n\t\n\t              case 33:\n\t                throw new Error('Unexpected instrument status ' + status);\n\t\n\t              case 34:\n\t                return _context7.abrupt('return', {});\n\t\n\t              case 35:\n\t              case 'end':\n\t                return _context7.stop();\n\t            }\n\t          }\n\t        }, _callee7, this);\n\t      }));\n\t\n\t      function processApiInstrumentResponse(_x24, _x25) {\n\t        return _ref15.apply(this, arguments);\n\t      }\n\t\n\t      return processApiInstrumentResponse;\n\t    }()\n\t\n\t    /**\n\t     * Process a form submit event\n\t     * @param {String} accessCode Access code of the instrument\n\t     * @param {Object} submittedForm (Optional) object with two values: event and form.\n\t     *                               This form is used instead of waiting for a new\n\t     *                               submit event.\n\t     */\n\t\n\t  }, {\n\t    key: 'processFormSubmit',\n\t    value: function () {\n\t      var _ref17 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(accessCode) {\n\t        var _this3 = this;\n\t\n\t        var submittedForm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t        var lastError, _loop, i, _ret;\n\t\n\t        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n\t          while (1) {\n\t            switch (_context9.prev = _context9.next) {\n\t              case 0:\n\t                lastError = null;\n\t                _loop = regeneratorRuntime.mark(function _callee8(i) {\n\t                  var _ref18, form, result;\n\t\n\t                  return regeneratorRuntime.wrap(function _callee8$(_context8) {\n\t                    while (1) {\n\t                      switch (_context8.prev = _context8.next) {\n\t                        case 0:\n\t                          if (!(i === 0 && submittedForm)) {\n\t                            _context8.next = 4;\n\t                            break;\n\t                          }\n\t\n\t                          _context8.t0 = submittedForm;\n\t                          _context8.next = 7;\n\t                          break;\n\t\n\t                        case 4:\n\t                          _context8.next = 6;\n\t                          return _this3.waitForInstrumentToSubmit();\n\t\n\t                        case 6:\n\t                          _context8.t0 = _context8.sent;\n\t\n\t                        case 7:\n\t                          _ref18 = _context8.t0;\n\t                          form = _ref18.form;\n\t                          _context8.prev = 9;\n\t                          _context8.next = 12;\n\t                          return (0, _promise.tryAtMost)(_this3.api.maxHttpRetries, _this3.api.retryDelay, function () {\n\t                            return _this3.submitInstrumentData(accessCode, form);\n\t                          });\n\t\n\t                        case 12:\n\t                          result = _context8.sent;\n\t                          return _context8.abrupt('return', {\n\t                            v: result\n\t                          });\n\t\n\t                        case 16:\n\t                          _context8.prev = 16;\n\t                          _context8.t1 = _context8['catch'](9);\n\t                          _context8.t2 = _context8.t1.status;\n\t                          _context8.next = _context8.t2 === 404 ? 21 : 23;\n\t                          break;\n\t\n\t                        case 21:\n\t                          _this3.triggerEvent('instrument-run-not-found', null, 'error');\n\t                          // We cannot recover from a 404 in this state, throw error to break loop\n\t                          throw _context8.t1;\n\t\n\t                        case 23:\n\t                          _this3.triggerEvent('instrument-submit-failed', null, 'error');\n\t                          return _context8.abrupt('break', 25);\n\t\n\t                        case 25:\n\t                          // Save error for later, we first let the user retry\n\t                          lastError = _context8.t1;\n\t\n\t                        case 26:\n\t                        case 'end':\n\t                          return _context8.stop();\n\t                      }\n\t                    }\n\t                  }, _callee8, _this3, [[9, 16]]);\n\t                });\n\t                i = 0;\n\t\n\t              case 3:\n\t                if (!(i < this.api.maxSubmitRetries)) {\n\t                  _context9.next = 11;\n\t                  break;\n\t                }\n\t\n\t                return _context9.delegateYield(_loop(i), 't0', 5);\n\t\n\t              case 5:\n\t                _ret = _context9.t0;\n\t\n\t                if (!((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\")) {\n\t                  _context9.next = 8;\n\t                  break;\n\t                }\n\t\n\t                return _context9.abrupt('return', _ret.v);\n\t\n\t              case 8:\n\t                i += 1;\n\t                _context9.next = 3;\n\t                break;\n\t\n\t              case 11:\n\t                throw lastError;\n\t\n\t              case 12:\n\t              case 'end':\n\t                return _context9.stop();\n\t            }\n\t          }\n\t        }, _callee9, this);\n\t      }));\n\t\n\t      function processFormSubmit(_x26, _x27) {\n\t        return _ref17.apply(this, arguments);\n\t      }\n\t\n\t      return processFormSubmit;\n\t    }()\n\t\n\t    /**\n\t     * (Async) Request a product from the api\n\t     *\n\t     * Promise returns an object contains all the instruments\n\t     * @param  {String} productId      ID of the product\n\t     * @param  {String} user UUID v4\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProduct',\n\t    value: function () {\n\t      var _ref19 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(productId, user) {\n\t        var headers, response, json;\n\t        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n\t          while (1) {\n\t            switch (_context10.prev = _context10.next) {\n\t              case 0:\n\t                headers = {\n\t                  'Content-Type': 'application/json',\n\t                  'X-123test-ApiKey': this.api.apiKey,\n\t                  'X-123test-ProductId': productId\n\t                };\n\t\n\t                if (user && user.length === 36) {\n\t                  headers['X-123test-Respondent'] = user;\n\t                }\n\t\n\t                _context10.prev = 2;\n\t                _context10.next = 5;\n\t                return (0, _request2['default'])(this.api.endpoint + '/product/request-product', {\n\t                  method: 'GET',\n\t                  mode: 'cors',\n\t                  headers: headers\n\t                });\n\t\n\t              case 5:\n\t                response = _context10.sent;\n\t                _context10.next = 8;\n\t                return response.json();\n\t\n\t              case 8:\n\t                json = _context10.sent;\n\t                return _context10.abrupt('return', {\n\t                  slots: json.slots,\n\t                  reports: json.reports,\n\t                  product_access_code: json.product_access_code\n\t                });\n\t\n\t              case 12:\n\t                _context10.prev = 12;\n\t                _context10.t0 = _context10['catch'](2);\n\t                _context10.t1 = _context10.t0.status;\n\t                _context10.next = _context10.t1 === 401 ? 17 : _context10.t1 === 400 ? 19 : _context10.t1 === 403 ? 21 : 23;\n\t                break;\n\t\n\t              case 17:\n\t                this.triggerEvent('invalid-api-key', _context10.t0.response, 'error');\n\t                return _context10.abrupt('break', 23);\n\t\n\t              case 19:\n\t                this.triggerEvent('product-not-found', _context10.t0.response, 'error');\n\t                return _context10.abrupt('break', 23);\n\t\n\t              case 21:\n\t                this.triggerEvent('product-no-access', _context10.t0.response, 'error');\n\t                return _context10.abrupt('break', 23);\n\t\n\t              case 23:\n\t                throw _context10.t0;\n\t\n\t              case 24:\n\t              case 'end':\n\t                return _context10.stop();\n\t            }\n\t          }\n\t        }, _callee10, this, [[2, 12]]);\n\t      }));\n\t\n\t      function requestProduct(_x29, _x30) {\n\t        return _ref19.apply(this, arguments);\n\t      }\n\t\n\t      return requestProduct;\n\t    }()\n\t\n\t    /**\n\t     * Get information about a specific product running\n\t     * @param  {String} accessCode Access code for product run\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProductInfo',\n\t    value: function () {\n\t      var _ref20 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(accessCode) {\n\t        var headers, response, json;\n\t        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n\t          while (1) {\n\t            switch (_context11.prev = _context11.next) {\n\t              case 0:\n\t                headers = {\n\t                  'Content-Type': 'application/json',\n\t                  'X-123test-ApiKey': this.api.apiKey\n\t                };\n\t                _context11.next = 3;\n\t                return (0, _request2['default'])(this.api.endpoint + '/product/' + accessCode + '/overview', {\n\t                  method: 'GET',\n\t                  mode: 'cors',\n\t                  headers: headers\n\t                });\n\t\n\t              case 3:\n\t                response = _context11.sent;\n\t                _context11.next = 6;\n\t                return response.json();\n\t\n\t              case 6:\n\t                json = _context11.sent;\n\t                return _context11.abrupt('return', {\n\t                  slots: json.slots,\n\t                  reports: json.reports,\n\t                  product_access_code: json.product_access_code\n\t                });\n\t\n\t              case 8:\n\t              case 'end':\n\t                return _context11.stop();\n\t            }\n\t          }\n\t        }, _callee11, this);\n\t      }));\n\t\n\t      function requestProductInfo(_x31) {\n\t        return _ref20.apply(this, arguments);\n\t      }\n\t\n\t      return requestProductInfo;\n\t    }()\n\t\n\t    /**\n\t     * (Async) Request an instrument from the api\n\t     *\n\t     * Promise returns body and resources that need to be loaded\n\t     * @param  {String} accessCode Access code for the instrument\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestInstrument',\n\t    value: function () {\n\t      var _ref21 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(accessCode) {\n\t        var response, body;\n\t        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n\t          while (1) {\n\t            switch (_context12.prev = _context12.next) {\n\t              case 0:\n\t                _context12.next = 2;\n\t                return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t                  method: 'GET',\n\t                  cache: 'no-cache',\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey,\n\t                    'X-123test-InstrumentRun': accessCode\n\t                  }\n\t                });\n\t\n\t              case 2:\n\t                response = _context12.sent;\n\t                _context12.next = 5;\n\t                return response.text();\n\t\n\t              case 5:\n\t                body = _context12.sent;\n\t                return _context12.abrupt('return', {\n\t                  body: body,\n\t                  status: response.headers.get('X-123test-InstrumentStatus'),\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 7:\n\t              case 'end':\n\t                return _context12.stop();\n\t            }\n\t          }\n\t        }, _callee12, this);\n\t      }));\n\t\n\t      function requestInstrument(_x32) {\n\t        return _ref21.apply(this, arguments);\n\t      }\n\t\n\t      return requestInstrument;\n\t    }()\n\t\n\t    /**\n\t     * Attach a listener to the instrument, makes use of a promise that resolves\n\t     * when the button is clicked.\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'waitForInstrumentToSubmit',\n\t    value: function waitForInstrumentToSubmit() {\n\t      var className = 'its123-disabled-loading';\n\t      var loadingIcon = '<div class=\"its123-loading-spinner\"><div></div><div></div><div></div></div>';\n\t      var form = document.querySelector(this.api.elements.instrumentFormSelector);\n\t      var button = form.querySelector('button[type=submit]');\n\t\n\t      // Re-enable button if it was previously disabled by this function\n\t      if (button.classList.contains(className)) {\n\t        button.disabled = false;\n\t        button.innerHTML = button.getAttribute('data-label') ? button.getAttribute('data-label') : button.innerText;\n\t        button.classList.remove(className);\n\t      }\n\t\n\t      // Return a new promise that resolves when the submit button is clicked\n\t      return new Promise(function (resolve) {\n\t        form.addEventListener('submit', function (event) {\n\t          event.preventDefault();\n\t\n\t          // Disable submit button and add class so that we know that\n\t          // the api js disabled the button (and not individual instrument js)\n\t          button.disabled = true;\n\t          button.classList.add(className);\n\t          // Save content to an attribute to reset it later\n\t          if (!button.getAttribute('data-label')) {\n\t            button.setAttribute('data-label', button.innerText);\n\t          }\n\t          button.innerHTML = loadingIcon;\n\t\n\t          resolve({ form: form, event: event });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Submit a form to the API for a given instrument\n\t     * @param  {String} accessCode Access code of the instrument\n\t     * @param  {Object} form       HTML Form\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'submitInstrumentData',\n\t    value: function () {\n\t      var _ref22 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(accessCode, form) {\n\t        var response, body;\n\t        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n\t          while (1) {\n\t            switch (_context13.prev = _context13.next) {\n\t              case 0:\n\t                this.triggerEvent('instrument-submitting', accessCode);\n\t\n\t                _context13.next = 3;\n\t                return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t                  method: 'POST',\n\t                  cache: 'no-cache',\n\t                  body: new FormData(form),\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey,\n\t                    'X-123test-InstrumentRun': accessCode,\n\t                    'X-123test-epochStart': this.api.epochStart,\n\t                    'X-123test-epochEnd': this.currentEpochTime()\n\t                  }\n\t                });\n\t\n\t              case 3:\n\t                response = _context13.sent;\n\t                _context13.next = 6;\n\t                return response.text();\n\t\n\t              case 6:\n\t                body = _context13.sent;\n\t                return _context13.abrupt('return', {\n\t                  body: body,\n\t                  status: response.headers.get('X-123test-InstrumentStatus'),\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 8:\n\t              case 'end':\n\t                return _context13.stop();\n\t            }\n\t          }\n\t        }, _callee13, this);\n\t      }));\n\t\n\t      function submitInstrumentData(_x33, _x34) {\n\t        return _ref22.apply(this, arguments);\n\t      }\n\t\n\t      return submitInstrumentData;\n\t    }()\n\t\n\t    /**\n\t     * Output an instrument to the DOM\n\t     * @param  {String} body Instrument HTML\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderInstrument',\n\t    value: function renderInstrument(body) {\n\t      this.api.elements.productElement.innerHTML = body;\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.productElement.style.display = 'block';\n\t      this.api.elements.reportElement.style.display = 'none';\n\t    }\n\t\n\t    /**\n\t     * Add event listeners to radio buttons in instruments\n\t     * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'bindInstrumentStorageListeners',\n\t    value: function bindInstrumentStorageListeners(prefix) {\n\t      var _this4 = this;\n\t\n\t      if (!this.api.storageEnabled) {\n\t        return;\n\t      }\n\t\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var _loop2 = function _loop2(e) {\n\t        var input = elements[e];\n\t\n\t        if (input.type === 'radio') {\n\t          // Sync store with current value of the input element\n\t          if (input.checked) {\n\t            _this4.store.set(prefix + '-' + input.name, input.value);\n\t          }\n\t          input.addEventListener('change', function () {\n\t            _this4.store.set(prefix + '-' + input.name, input.value);\n\t          });\n\t        }\n\t      };\n\t\n\t      for (var e = 0; e < elements.length; e += 1) {\n\t        _loop2(e);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Apply stored instrument state to the DOM\n\t     * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadInstrumentStateFromStorage',\n\t    value: function loadInstrumentStateFromStorage(prefix) {\n\t      if (!this.api.storageEnabled) {\n\t        return;\n\t      }\n\t\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var loaded = false;\n\t      for (var e = 0; e < elements.length; e += 1) {\n\t        var _input = elements[e];\n\t        var value = this.store.get(prefix + '-' + _input.name);\n\t\n\t        if (value !== null && _input.type === 'radio' && _input.value === value) {\n\t          _input.checked = true;\n\t          loaded = true;\n\t        }\n\t      }\n\t\n\t      if (loaded) {\n\t        this.triggerEvent('instrument-item-data-loaded', prefix);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Render a report to the DOM\n\t     *\n\t     * @param  {String} body report body\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderReport',\n\t    value: function renderReport(body) {\n\t      this.api.elements.productElement.style.display = 'none';\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.reportElement.innerHTML = body;\n\t      this.api.elements.reportElement.style.display = 'block';\n\t    }\n\t\n\t    /**\n\t     * Add new resources to the DOM\n\t     *\n\t     * Returns a new Promise that resolves when all critical assets have been loaded\n\t     * @param  {Object} resources The resources to load\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'runResourceFunctions',\n\t\n\t\n\t    /**\n\t     * Run functions for a list of JS resources\n\t     * @param  {Object} resources\n\t     * @return {void}\n\t     */\n\t    value: function runResourceFunctions(resources) {\n\t      var _this5 = this;\n\t\n\t      Object.keys(resources).forEach(function (key) {\n\t        var resource = resources[key];\n\t        if (resource.type === 'js' && typeof window.its123[resource.func] === 'function') {\n\t          // Give context as variable\n\t          window.its123[resource.func](_this5.api, _this5);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Request a report by its access code\n\t     * @param  {String} accessCode access code for the report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestReport',\n\t    value: function () {\n\t      var _ref23 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(accessCode) {\n\t        var _ref24 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref24$metaData = _ref24.metaData,\n\t            metaData = _ref24$metaData === undefined ? '' : _ref24$metaData,\n\t            _ref24$metaHmac = _ref24.metaHmac,\n\t            metaHmac = _ref24$metaHmac === undefined ? '' : _ref24$metaHmac;\n\t\n\t        var url, response, body;\n\t        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n\t          while (1) {\n\t            switch (_context14.prev = _context14.next) {\n\t              case 0:\n\t                url = void 0;\n\t\n\t                if (metaData.length <= 0 || metaHmac.length <= 0) {\n\t                  url = this.api.endpoint + '/report/' + accessCode;\n\t                } else {\n\t                  url = this.api.endpoint + '/report/' + accessCode + '?meta=' + metaData + '&meta_hmac=' + metaHmac;\n\t                }\n\t\n\t                _context14.next = 4;\n\t                return (0, _request2['default'])(url, {\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey\n\t                  },\n\t                  method: 'GET',\n\t                  mode: 'cors'\n\t                });\n\t\n\t              case 4:\n\t                response = _context14.sent;\n\t                _context14.next = 7;\n\t                return response.text();\n\t\n\t              case 7:\n\t                body = _context14.sent;\n\t                return _context14.abrupt('return', {\n\t                  body: body,\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 9:\n\t              case 'end':\n\t                return _context14.stop();\n\t            }\n\t          }\n\t        }, _callee14, this);\n\t      }));\n\t\n\t      function requestReport(_x35, _x36) {\n\t        return _ref23.apply(this, arguments);\n\t      }\n\t\n\t      return requestReport;\n\t    }()\n\t\n\t    /**\n\t     * Log an exception and retrow\n\t     * @param  {String} id Error id\n\t     * @param  {Object} e The error\n\t     * @param {Object} param Invoked parameter data\n\t     * @return null\n\t     */\n\t\n\t  }, {\n\t    key: 'handleException',\n\t    value: function () {\n\t      var _ref25 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(id, e) {\n\t        var param = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n\t          while (1) {\n\t            switch (_context15.prev = _context15.next) {\n\t              case 0:\n\t                _context15.t0 = e.status;\n\t                _context15.next = _context15.t0 === 401 ? 3 : _context15.t0 === 403 ? 3 : _context15.t0 === 404 ? 6 : _context15.t0 === 408 ? 8 : _context15.t0 === 503 ? 8 : _context15.t0 === 500 ? 11 : 13;\n\t                break;\n\t\n\t              case 3:\n\t                this.log('error', '123test API Permission error: ' + e.message + ' (' + e.status + ')');\n\t                this.triggerEvent('api-permission', { status: 403, message: location.hostname + ' ' + this.api.apiKey + ' ' + this.api.productId }, 'error');\n\t                return _context15.abrupt('return');\n\t\n\t              case 6:\n\t                this.log('error', '123test API Product error: ' + e.message + ' (' + e.status + ')');\n\t                return _context15.abrupt('break', 14);\n\t\n\t              case 8:\n\t                this.log('error', '123test API Server error: API is unavailable');\n\t                this.triggerEvent('api-unavailable', e, 'error');\n\t                return _context15.abrupt('return');\n\t\n\t              case 11:\n\t                this.log('error', '123test API Server error: ' + e.message + ' (' + e.status + ')');\n\t                return _context15.abrupt('break', 14);\n\t\n\t              case 13:\n\t                return _context15.abrupt('break', 14);\n\t\n\t              case 14:\n\t\n\t                // Trigger that a unhandled exception has occurred\n\t                this.log('error', '123test API Server error: Error Unknown, ' + param);\n\t                this.triggerEvent('api-unavailable', e, 'error');\n\t\n\t              case 16:\n\t              case 'end':\n\t                return _context15.stop();\n\t            }\n\t          }\n\t        }, _callee15, this);\n\t      }));\n\t\n\t      function handleException(_x38, _x39, _x40) {\n\t        return _ref25.apply(this, arguments);\n\t      }\n\t\n\t      return handleException;\n\t    }()\n\t\n\t    /**\n\t     * Utility function to get the url to a PDF report for a given product object\n\t     * @param  {Object} product               The product that contains the report list\n\t     * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n\t     * @return {String}                       Url to the report\n\t     */\n\t\n\t  }, {\n\t    key: 'getPdfUrl',\n\t    value: function getPdfUrl(product) {\n\t      var typeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'standard';\n\t\n\t      // Get correct type id for premium or standard pdf\n\t      var type = typeName === 'premium' ? 221 : 121;\n\t      var report = product.reports.find(function (r) {\n\t        return r.type === type;\n\t      });\n\t\n\t      if (!report) {\n\t        throw new Error('No access code for pdf is present in product object.');\n\t      }\n\t\n\t      return this.api.endpoint + '/report/' + report.access_code;\n\t    }\n\t\n\t    /**\n\t     * Send a new event to the listeners\n\t     * @param  {String} eventName Name of the event\n\t     * @param  {Object} data      Optional event data\n\t     * @param  {String} type      Event type\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'triggerEvent',\n\t    value: function triggerEvent(eventName, data) {\n\t      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'info';\n\t\n\t      var listeners = this.eventListeners[eventName];\n\t\n\t      if (listeners && listeners.length > 0) {\n\t        listeners.forEach(function (l) {\n\t          return l(data);\n\t        });\n\t      }\n\t\n\t      this.log(type, 'Event triggered: ' + eventName);\n\t    }\n\t\n\t    /**\n\t     * Ouputs a message to the console based on the log logLevel\n\t     * @param  {String} type    Type of the message\n\t     * @param  {String} message The message itself\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'log',\n\t    value: function log(type, message) {\n\t      switch (type) {\n\t        case 'error':\n\t          if (this.api.logLevel !== 'none') {\n\t            console.error(message);\n\t          }\n\t          break;\n\t\n\t        case 'info':\n\t        default:\n\t          if (this.api.logLevel !== 'error' || this.api.logLevel !== 'none') {\n\t            console.info(message);\n\t          }\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'currentEpochTime',\n\t    value: function currentEpochTime() {\n\t      var now = new Date();\n\t      var epoch = Math.round(now.getTime() / 1000);\n\t      return epoch;\n\t    }\n\t\n\t    /**\n\t     * Register a new event listener\n\t     * @param  {String|Array}   eventName Name of the event\n\t     * @param  {Function} callback\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(eventName, callback) {\n\t      var _this6 = this;\n\t\n\t      var events = [];\n\t\n\t      if (Array.isArray(eventName)) {\n\t        events = eventName;\n\t      } else {\n\t        events.push(eventName);\n\t      }\n\t\n\t      events.forEach(function (event) {\n\t        if (!_this6.eventListeners[event]) {\n\t          _this6.eventListeners[event] = [];\n\t        }\n\t\n\t        _this6.eventListeners[event].push(callback);\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'loadResources',\n\t    value: function loadResources(resources) {\n\t      if (!resources) {\n\t        return null;\n\t      }\n\t\n\t      // Map each resource to a new Promise\n\t      // JS resources resolve when loaded\n\t      return Promise.all(Object.keys(resources).map(function (key) {\n\t        return new Promise(function (resolve, reject) {\n\t          var resourceItem = resources[key];\n\t          var head = document.getElementsByTagName('head')[0];\n\t\n\t          // Do not load resources that are already present\n\t          if (document.querySelectorAll('script[src=\"' + resourceItem.path + '\"]').length > 0) {\n\t            resolve();\n\t            return;\n\t          }\n\t          switch (resourceItem.type) {\n\t            case 'js':\n\t              {\n\t                var script = document.createElement('script');\n\t                script.src = resourceItem.path;\n\t                // Allow some files to not load asynchronous\n\t                script.async = resourceItem.async || false;\n\t                // Resolve when loaded\n\t                script.onload = resolve;\n\t                // Append to the head of the page\n\t                head.appendChild(script);\n\t              }\n\t              break;\n\t            case 'css':\n\t              {\n\t                var cssLink = document.createElement('link');\n\t                cssLink.rel = 'stylesheet';\n\t                cssLink.type = 'text/css';\n\t                cssLink.media = 'all';\n\t                cssLink.href = resourceItem.path;\n\t                // Append to the head of the page\n\t                head.appendChild(cssLink);\n\t\n\t                // Directy resolve css, not critical\n\t                resolve();\n\t              }\n\t              break;\n\t            default:\n\t              reject('Unknown resource type ' + resourceItem.type);\n\t          }\n\t        });\n\t      }));\n\t    }\n\t  }]);\n\t\n\t  return Its123;\n\t}();\n\t\n\texports['default'] = Its123;\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports['default'] = request;\n\t\n\tvar _promise = __webpack_require__(14);\n\t\n\t/**\n\t * Checks if a network request came back fine, and throws an error if not\n\t *\n\t * @param  {object} response   A response from a network request\n\t *\n\t * @return {object|undefined} Returns either the response, or throws an error\n\t */\n\tfunction checkStatus(response) {\n\t  if (response.status >= 200 && response.status < 300) {\n\t    return response;\n\t  }\n\t\n\t  var error = new Error(response.statusText);\n\t  error.response = response;\n\t  error.status = response.status;\n\t\n\t  throw error;\n\t}\n\t\n\t/**\n\t * Requests a URL, returning a promise\n\t *\n\t * @param  {string} url       The URL we want to request\n\t * @param  {object} [options] The options we want to pass to \"fetch\"\n\t * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n\t * @return {object}           The response data\n\t */\n\tfunction request(url) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8000;\n\t\n\t  return (0, _promise.timeoutPromise)(timeout, fetch(url, options).then(checkStatus));\n\t}\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Utility wrapper around localStorage.\n\t *\n\t * Adds convenience functions to save and retrieve items\n\t * from the local storage store.\n\t */\n\tvar ClientStorage = function () {\n\t  function ClientStorage() {\n\t    var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'its123';\n\t\n\t    _classCallCheck(this, ClientStorage);\n\t\n\t    this.store = window.localStorage;\n\t    this.storeEnabled = enabled;\n\t    this.prefix = prefix;\n\t\n\t    if (this.storeEnabled) {\n\t      // Test availability of local storage\n\t      var testItem = 'test';\n\t      try {\n\t        this.store.setItem(testItem, testItem);\n\t        this.store.removeItem(testItem);\n\t        this.storeEnabled = true;\n\t      } catch (e) {\n\t        this.storeEnabled = false;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Store a product in the local storage\n\t   * @param  {String} productId Id of the product\n\t   * @param  {object} product   Product information\n\t   * @param  {String} user      User UUID\n\t   * @return {void}\n\t   */\n\t\n\t\n\t  _createClass(ClientStorage, [{\n\t    key: 'saveProduct',\n\t    value: function saveProduct(productId, product, user) {\n\t      // Add new record\n\t      var productData = _extends({}, product, {\n\t        user: user,\n\t        started: Date.now()\n\t      });\n\t\n\t      this.set(productId, JSON.stringify(productData));\n\t    }\n\t\n\t    /**\n\t     * Load a product from the storage\n\t     *\n\t     * @param  {String} productId             Product id\n\t     * @param  {String} [user='']             User UUID\n\t     * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n\t     * @return {null|Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadProduct',\n\t    value: function loadProduct(productId) {\n\t      var user = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t      var expirationTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3600;\n\t\n\t      var item = this.get(productId);\n\t\n\t      // Check presence of object\n\t      if (!item) {\n\t        return null;\n\t      }\n\t\n\t      var product = JSON.parse(item);\n\t\n\t      if (product && product.started + expirationTime * 1000 > Date.now() && product.user === user) {\n\t        return product;\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Set the current state of an instrument in storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @param  {String} status     Status indicator\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'saveInstrumentStatus',\n\t    value: function saveInstrumentStatus(accessCode, status) {\n\t      this.set(accessCode, status);\n\t    }\n\t\n\t    /**\n\t     * Get status of an instrument from storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @return {String|null} Status\n\t     */\n\t\n\t  }, {\n\t    key: 'loadInstrumentStatus',\n\t    value: function loadInstrumentStatus(accessCode) {\n\t      return this.get(accessCode);\n\t    }\n\t\n\t    /**\n\t     * Save an item to storage\n\t     * @param  {String} id   identifier\n\t     * @param  {mixed} item Value to store\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'set',\n\t    value: function set(id, item) {\n\t      if (!this.storeEnabled) {\n\t        return;\n\t      }\n\t\n\t      this.store.setItem(this.prefix + '-' + id, item);\n\t    }\n\t\n\t    /**\n\t     * Retrieve an item from storage\n\t     * @param  {String} id Storage identifier\n\t     * @return {mixed}    The value\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get(id) {\n\t      if (!this.storeEnabled) {\n\t        return null;\n\t      }\n\t\n\t      return this.store.getItem(this.prefix + '-' + id);\n\t    }\n\t\n\t    /**\n\t     * Remove item from storage\n\t     * @param  {String} id Storage identifier\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(id) {\n\t      if (!this.storeEnabled) {\n\t        return;\n\t      }\n\t\n\t      this.store.removeItem(this.prefix + '-' + id);\n\t    }\n\t\n\t    /**\n\t     * Remove all local storage elements that start with a given prefix\n\t     * @param  {String} prefix Prefix to search for\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'removeByPrefix',\n\t    value: function removeByPrefix(prefix) {\n\t      if (!this.storeEnabled) {\n\t        return;\n\t      }\n\t\n\t      for (var i = this.store.length - 1; i >= 0; i -= 1) {\n\t        if (this.store.key(i).startsWith(this.prefix + '-' + prefix)) {\n\t          this.store.removeItem(this.store.key(i));\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Clear the local storage of all items associated with a product id\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearProduct',\n\t    value: function clearProduct(productId) {\n\t      var _this = this;\n\t\n\t      var productJson = this.get(productId);\n\t\n\t      if (!productJson) {\n\t        return;\n\t      }\n\t\n\t      var product = JSON.parse(productJson);\n\t      product.slots.instruments.forEach(function (i) {\n\t        _this.remove(i.access_code);\n\t        _this.removeByPrefix(i.access_code);\n\t      });\n\t      this.remove(productId);\n\t    }\n\t  }]);\n\t\n\t  return ClientStorage;\n\t}();\n\t\n\texports['default'] = ClientStorage;\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\t\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\t\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\t\n\t    if (typeof process === \"object\" && process.domain) {\n\t      invoke = process.domain.bind(invoke);\n\t    }\n\t\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  runtime.AsyncIterator = AsyncIterator;\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          if (method === \"return\" ||\n\t              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n\t            // A return or throw (when the delegate iterator has no throw\n\t            // method) always terminates the yield* loop.\n\t            context.delegate = null;\n\t\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            var returnMethod = delegate.iterator[\"return\"];\n\t            if (returnMethod) {\n\t              var record = tryCatch(returnMethod, delegate.iterator, arg);\n\t              if (record.type === \"throw\") {\n\t                // If the return method threw an exception, let that\n\t                // exception prevail over the original return or throw.\n\t                method = \"throw\";\n\t                arg = record.arg;\n\t                continue;\n\t              }\n\t            }\n\t\n\t            if (method === \"return\") {\n\t              // Continue with the outer return, now that the delegate\n\t              // iterator has been terminated.\n\t              continue;\n\t            }\n\t          }\n\t\n\t          var record = tryCatch(\n\t            delegate.iterator[method],\n\t            delegate.iterator,\n\t            arg\n\t          );\n\t\n\t          if (record.type === \"throw\") {\n\t            context.delegate = null;\n\t\n\t            // Like returning generator.throw(uncaught), but without the\n\t            // overhead of an extra function call.\n\t            method = \"throw\";\n\t            arg = record.arg;\n\t            continue;\n\t          }\n\t\n\t          // Delegate generator ran and handled its own exceptions so\n\t          // regardless of what the method was, we continue as if it is\n\t          // \"next\" with an undefined arg.\n\t          method = \"next\";\n\t          arg = undefined;\n\t\n\t          var info = record.arg;\n\t          if (info.done) {\n\t            context[delegate.resultName] = info.value;\n\t            context.next = delegate.nextLoc;\n\t          } else {\n\t            state = GenStateSuspendedYield;\n\t            return info;\n\t          }\n\t\n\t          context.delegate = null;\n\t        }\n\t\n\t        if (method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = arg;\n\t\n\t        } else if (method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw arg;\n\t          }\n\t\n\t          if (context.dispatchException(arg)) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            method = \"next\";\n\t            arg = undefined;\n\t          }\n\t\n\t        } else if (method === \"return\") {\n\t          context.abrupt(\"return\", arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          var info = {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            if (context.delegate && method === \"next\") {\n\t              // Deliberately forget the last sent value so that we don't\n\t              // accidentally pass it on to the delegate.\n\t              arg = undefined;\n\t            }\n\t          } else {\n\t            return info;\n\t          }\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(arg) call above.\n\t          method = \"throw\";\n\t          arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\t\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t        return !!caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.next = finallyEntry.finallyLoc;\n\t      } else {\n\t        this.complete(record);\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = record.arg;\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(32)))\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// its123api.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 762c30392d17f32cd684","import Its123 from './Api/Its123';\n\n// Bind Its123 to the global window\nwindow.Its123 = Its123;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\n * Promise with timeout function\n * @param  {Number} ms      Miliseconds to wait before promise is rejected\n * @param  {Promise} promise The promise to run\n * @return {Promise}         Promise with timeout\n */\nexport function timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    // Create timer that rejects promise after ms miliseconds\n    const timeoutId = setTimeout(() => {\n      const error = new Error('timeout');\n      error.status = 408;\n      reject(error);\n    }, ms);\n\n    // Clear timeout if promise resolves/rejects on its own\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      },\n    );\n  });\n}\n\n/**\n * Decorates a promis-creating function with a retry functionality (by recursion)\n * @param  {Number}   maxRetries  Max number of retries\n * @param  {Number}   timeout     Miliseconds to wait\n * @param  {Function} fn          Function that creates and returns a promise\n * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n * @param  {Number}   [current=0] Current iteration in the retry loop\n * @return {Promise}\n */\nexport function tryAtMost(maxRetries, timeout, fn, timeoutFactor = 4, current = 0) {\n  return new Promise((resolve, reject) => fn()\n    .then(resolve)\n    .catch((error) => {\n      if (current < maxRetries) {\n        setTimeout(() =>\n          resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1)),\n          timeout,\n        );\n      } else {\n        reject(error);\n      }\n    }),\n  );\n}\n\nexport function retryUntilResolved(fn) {\n  return new Promise(resolve => fn()\n    .then(resolve)\n    .catch(() => resolve(retryUntilResolved(fn))),\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/promise.js","/*\n * 123Test Api v2\n *\n * @author Wouter Bulten <github.com/wouterbulten>\n * @author Theo den Hollander <github.com/theodenhollander>\n * @license\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 123test\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport 'regenerator-runtime/runtime';\n\nimport request from '../util/request';\n\nimport { tryAtMost } from '../util/promise';\n\nimport ClientStorage from '../util/storage';\n\n/**\n * Default configuration for api, can be overriden by user\n * @type {Object}\n */\nconst defaultApiConfig = {\n  // Domain config\n  domain: 'https://api.123test.com',\n  version: 'v2',\n\n  // Environment config\n  logLevel: 'all', // One of: all, info, error, none\n\n  // DOM config\n  elements: {\n    // Selector used to bind events to instrument forms, we advise\n    // not to alter this selector.\n    instrumentFormSelector: 'form.its123-instrument',\n    // ID for the loading div\n    loadingElementId: 'its123api-loading',\n    // ID for the instrument/product div\n    productElementId: 'its123api-product',\n    // ID for the report div\n    reportElementId: 'its123api-report',\n    // ID for the prefetch resource\n    prefetchResourceElementId: 'its123api-prefetch-resource-data',\n\n    // Internal placeholders for the DOM elements, do not set these to any values\n    loadingElement: null,\n    productElement: null,\n    reportElement: null,\n  },\n\n  // Number of retries some fetch request may make\n  maxHttpRetries: 2,\n  // Initial delay before a retry\n  retryDelay: 8000,\n  // Number of times a user can try to resubmit a form\n  maxSubmitRetries: 10,\n\n  // Whether to use localStorage for caching\n  storageEnabled: true,\n  storagePrefix: 'its123Api',\n\n  // Public api key used for every request\n  apiKey: 'not-set',\n\n  // loaded product ID\n  productId: 'not-set',\n\n  // Epoch time user\n  epochStart: null,\n  epochCompleted: null,\n};\n\n/**\n * Main API class\n */\nclass Its123 {\n\n  /**\n   * Create new Api object\n   * @param  {Object} [apiConfig={}] Api configuration\n   * @return {void}\n   */\n  constructor(apiConfig = {}) {\n    // Set api config to default and override with parameters\n    this.api = {\n      ...defaultApiConfig,\n      ...apiConfig,\n    };\n    // Construct correct api end point\n    this.api.endpoint = `${this.api.domain}/${this.api.version}`;\n\n    // Check for valid api key\n    if (this.api.apiKey === 'not-set') {\n      throw new Error(\n        'Api key must be set when initalising Its123 object. Please check your api config.',\n      );\n    }\n\n    // Query the DOM and set options\n    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n    this.api.elements.prefetchResourceElement = document.getElementById(this.api.elements.prefetchResourceElementId);\n\n    if (!this.api.elements.loadingElement\n      || !this.api.elements.productElement || !this.api.elements.reportElement) {\n      throw new Error(\n        'Element for loading, product or report not found. Please check your HTML and Api config.',\n      );\n    }\n\n    // Placeholder for eventlisteners\n    this.eventListeners = {};\n\n    // Create new storage object for localStorage functionality\n    this.store = new ClientStorage(this.api.storageEnabled, this.api.storagePrefix);\n  }\n\n  /**\n   * Wrapper around loadAndRunProduct with error handling\n   *\n   * @param  {String} productId product to load\n   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n   * @return {Promise}\n   * @see loadAndRunProduct()\n   */\n  async loadProduct(productId, { renderReport = true, user = '' } = {}) {\n    try {\n      this.api.epochStart = this.currentEpochTime();\n      this.api.productId = productId;\n      return await this.loadAndRunProduct(productId, { renderReport, user });\n    } catch (error) {\n      // Something could be wrong with our local store,\n      // clear it to prevent any future errors\n      this.store.clearProduct(productId);\n      this.handleException('loadProduct', error, { productId, renderReport, user });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Start a product run given an prefetched insrument\n   * @param  {String} productId product to load\n   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n   * @return {Promise}\n   * @see loadAndRunProduct()\n   */\n  async prefetchProduct(productId, { renderReport = true, user = '' } = {}) {\n\n    // Load prefetched resource data\n    this.api.epochStart = this.currentEpochTime();\n    if(this.api.elements.prefetchResourceElement)\n    {\n      const resources = JSON.parse(atob(this.api.elements.prefetchResourceElement.value));\n      await Its123.loadResources(resources);\n      await this.runResourceFunctions(resources);\n    }\n\n    // First check for existing run in storage\n    const product = this.store.loadProduct(productId, user);\n\n    if (product) {\n      // Revert to non-prefetch call if the user has data in local storage\n      return this.loadProduct(productId, { renderReport, user });\n    }\n\n    try {\n      // Enable localstorage support for anonymous instruments\n      // Use the product key as the id to prevent loading data from other products\n      this.loadInstrumentStateFromStorage(`st-${productId}`);\n      this.bindInstrumentStorageListeners(`st-${productId}`);\n\n      // Wait for prefetched instrument to submit\n      const form = await this.waitForInstrumentToSubmit();\n\n      // Clear local storage from temporary instrument data\n      this.store.removeByPrefix(`st-${productId}`);\n\n      return this.loadAndRunProduct(productId, { renderReport, user }, form);\n    } catch (error) {\n      // Something could be wrong with our local store,\n      // clear it to prevent any future errors\n      this.store.clearProduct(productId);\n\n      throw error;\n    }\n  }\n\n  /**\n   * Restarts a product by clearing any local data\n   *\n   * @param  {String} productId product to load\n   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n   * @return {Promise}\n   * @see loadAndRunProduct()\n   */\n  async restartProduct(productId, { renderReport = true, user = '' } = {}) {\n    this.store.clearProduct(productId);\n    return this.loadProduct(productId, { renderReport, user });\n  }\n\n  /**\n   * Load and run a product\n   *\n   * Runs all the required sub steps from instrument to report. All promises are chained\n   * and the final promise returns the product data when resolved.\n   *\n   * Will automatically render the first report that is available. Set `renderReport` to false\n   * to counter this behaviour.\n   *\n   * Data structure of the product object:\n   *\n   * product = {\n   *  slots: {\n   *    instruments: [],\n   *    respondent: {},\n   *  },\n   *  reports: [],\n   *  access_code: null,\n   * };\n   *\n   * @param  {String} productId product to load\n   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n   *                                       report render functions\n   * @param  {String}  [user=''] Optional user UUID\n   * @return {Promise}\n   */\n  async loadAndRunProduct(productId, { renderReport = true, user = '' } = {}, prefetchedForm = null) {\n    let product = null;\n\n    // Show loading div (only when not in prefetch mode)\n    if (!prefetchedForm) {\n      this.api.elements.productElement.style.display = 'none';\n      this.api.elements.loadingElement.style.display = 'block';\n    }\n\n    // Try to load product information from local storage, if it fails\n    // fall back to a API request\n    product = this.store.loadProduct(productId, user);\n\n    if (!product) {\n      product = await this.requestProduct(productId, user);\n\n      // Store the requested product in the local store for future requests\n      this.store.saveProduct(productId, product, user);\n    }\n\n    return await this.runProduct(productId, { renderReport }, prefetchedForm);\n  }\n\n  /**\n   * Run a product\n   *\n   * Runs all the required sub steps from instrument to report. All promises are chained\n   * and the final promise returns the product data when resolved.\n   *\n   * Will automatically render the first report that is available. Set `renderReport` to false\n   * to counter this behaviour.\n   *\n   * Data structure of the product object:\n   *\n   * product = {\n   *  slots: {\n   *    instruments: [],\n   *    respondent: {},\n   *  },\n   *  reports: [],\n   *  access_code: null,\n   * };\n   *\n   * @param  {Object} product object to load\n   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n   *                                       report render functions\n   * @return {Promise}\n   */\n  async runProduct(product, { renderReport = true } = {}, prefetchedForm = null) {\n\n    // Show loading div (only when not in prefetch mode)\n    if (!prefetchedForm) {\n      this.api.elements.productElement.style.display = 'none';\n      this.api.elements.loadingElement.style.display = 'block';\n    }\n\n    this.store.saveProduct(product.product_access_code, product, product.slots.respondent);\n\n    this.triggerEvent('product-loaded', product);\n    let instruments = product.slots.instruments;\n    this.triggerEvent('instruments-loaded', instruments);\n\n    // Filter any instruments that already have been completed\n    // Prevents unnecessary requests to the API\n    instruments = instruments.filter((i) => {\n      const status = this.store.loadInstrumentStatus(i.access_code);\n\n      switch (status) {\n        case 'ended-items':\n        case 'ended-skipped':\n        case 'ended-time':\n          this.triggerEvent('instrument-already-completed',\n            { accessCode: i.access_code, status });\n          return false;\n        case 'in-progress':\n          this.triggerEvent('instrument-continue',\n            { accessCode: i.access_code, status });\n          return true;\n        case 'started':\n        default:\n          return true;\n      }\n    });\n\n    for (let i = 0; i < instruments.length; i += 1) {\n      const accessCode = instruments[i].access_code;\n\n      let result;\n      if (i === 0 && prefetchedForm) {\n        // Skip requesting the instrument when it is the first and a prefetched\n        // form is on the page.\n        this.triggerEvent('instrument-prefetched', {});\n        result = { status: 'prefetched', form: prefetchedForm };\n      } else {\n        result = await this.requestInstrument(accessCode);\n        this.triggerEvent('instrument-started', { accessCode, status: result.status });\n      }\n\n      await this.processApiInstrumentResponse(accessCode, result);\n    }\n\n    console.log(`Render report:  ${renderReport}, Product:`);\n    console.log(product);\n\n    if (renderReport) {\n      // All instruments have been completed, render report\n      const { body, resources } = await this.requestReport(product.reports[0].access_code);\n      await Its123.loadResources(resources);\n      this.renderReport(body);\n      this.runResourceFunctions(resources);\n      this.triggerEvent('report-ready');\n    } else {\n      console.log('Render report is not loaded.');\n    }\n\n    // Remove this session from the local storage\n    this.store.clearProduct(product.product_access_code);\n    // Trigger event and pass product info\n    this.triggerEvent('product-completed', product);\n\n    return product;\n  }\n\n  /**\n   * Load an render a report by its access code\n   * @param  {String} accessCode Access code for report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  async loadReport(accessCode, { metaData, metaHmac } = {}) {\n    try {\n      const { body, resources } =\n        await tryAtMost(this.api.maxHttpRetries, this.api.retryDelay, () =>\n          this.requestReport(accessCode, { metaData, metaHmac }),\n      );\n      await Its123.loadResources(resources);\n      this.renderReport(body);\n      this.runResourceFunctions(resources);\n      this.triggerEvent('report-ready');\n    } catch (error) {\n      this.handleException('loadReport', error, { accessCode, metaData, metaHmac });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Process a single API response from an instrument call\n   *\n   * When the instrument is still running the function will return a new Promise\n   * that waits for a form submit.\n   *\n   * @param  {String} accessCode Access code for this instrument\n   * @param  {String} status     Current instrument status\n   * @param  {Array} resources  Resources to load\n   * @param  {String} body       Html to put in the DOM\n   * @param  {Object} form      (Optional) submitted form+event object for prefetch requests\n   * @return {Promise}\n   */\n  async processApiInstrumentResponse(accessCode, { status, resources, body, form = null }) {\n    switch (status) {\n      case 'prefetched':\n        if (!form) {\n          throw new Error('Cannot handle prefetch state without existing instrument form');\n        }\n        // Run function again until instrument has ended with data from form\n        return await this.processApiInstrumentResponse(accessCode,\n          await this.processFormSubmit(accessCode, form),\n        );\n      case 'started':\n      case 'in-progress':\n        this.api.epochStart = this.currentEpochTime();\n        this.store.saveInstrumentStatus(accessCode, status);\n\n        // Wait for resources to load\n        await Its123.loadResources(resources);\n\n        this.renderInstrument(body);\n\n        // Try to load item data from local storage\n        this.loadInstrumentStateFromStorage(accessCode);\n        this.bindInstrumentStorageListeners(accessCode);\n\n        this.runResourceFunctions(resources);\n        this.triggerEvent('instrument-submitted');\n        // Run function again until instrument has ended\n        return await this.processApiInstrumentResponse(accessCode,\n          await this.processFormSubmit(accessCode),\n        );\n      case 'ended-items':\n      case 'ended-skipped':\n      case 'ended-time':\n        this.store.saveInstrumentStatus(accessCode, status);\n        this.triggerEvent('instrument-completed', { accessCode, status });\n        break;\n      default:\n        throw new Error(`Unexpected instrument status ${status}`);\n    }\n\n    return {};\n  }\n\n  /**\n   * Process a form submit event\n   * @param {String} accessCode Access code of the instrument\n   * @param {Object} submittedForm (Optional) object with two values: event and form.\n   *                               This form is used instead of waiting for a new\n   *                               submit event.\n   */\n  async processFormSubmit(accessCode, submittedForm = null) {\n    let lastError = null;\n    for (let i = 0; i < this.api.maxSubmitRetries; i += 1) {\n      // Use already submitted form or wait for the form to submit\n      // Only in first attempt\n      const { form } = (i === 0 && submittedForm)\n        ? submittedForm : await this.waitForInstrumentToSubmit();\n\n      try {\n        const result = await tryAtMost(this.api.maxHttpRetries, this.api.retryDelay, () =>\n          this.submitInstrumentData(accessCode, form),\n        );\n        return result;\n      } catch (error) {\n        switch (error.status) {\n          case 404:\n            this.triggerEvent('instrument-run-not-found', null, 'error');\n            // We cannot recover from a 404 in this state, throw error to break loop\n            throw error;\n          default:\n            this.triggerEvent('instrument-submit-failed', null, 'error');\n            break;\n        }\n        // Save error for later, we first let the user retry\n        lastError = error;\n      }\n    }\n    // Failed after max attempts, throw last error\n    throw lastError;\n  }\n\n  /**\n   * (Async) Request a product from the api\n   *\n   * Promise returns an object contains all the instruments\n   * @param  {String} productId      ID of the product\n   * @param  {String} user UUID v4\n   * @return {Promise}\n   */\n  async requestProduct(productId, user) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n      'X-123test-ProductId': productId,\n    };\n    if (user && user.length === 36) {\n      headers['X-123test-Respondent'] = user;\n    }\n\n    try {\n      const response = await request(`${this.api.endpoint}/product/request-product`, {\n        method: 'GET',\n        mode: 'cors',\n        headers,\n      });\n\n      const json = await response.json();\n\n      return {\n        slots: json.slots,\n        reports: json.reports,\n        product_access_code: json.product_access_code,\n      };\n    } catch (error) {\n      switch (error.status) {\n        case 401:\n          this.triggerEvent('invalid-api-key', error.response, 'error');\n          break;\n        case 400:\n          this.triggerEvent('product-not-found', error.response, 'error');\n          break;\n        case 403:\n          this.triggerEvent('product-no-access', error.response, 'error');\n          break;\n        default:\n          // Do nothing\n      }\n      // Bubble-up error\n      throw error;\n    }\n  }\n\n  /**\n   * Get information about a specific product running\n   * @param  {String} accessCode Access code for product run\n   * @return {Promise}\n   */\n  async requestProductInfo(accessCode) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n    };\n\n    const response = await request(`${this.api.endpoint}/product/${accessCode}/overview`, {\n      method: 'GET',\n      mode: 'cors',\n      headers,\n    });\n\n    const json = await response.json();\n\n    return {\n      slots: json.slots,\n      reports: json.reports,\n      product_access_code: json.product_access_code,\n    };\n  }\n\n  /**\n   * (Async) Request an instrument from the api\n   *\n   * Promise returns body and resources that need to be loaded\n   * @param  {String} accessCode Access code for the instrument\n   * @return {Promise}\n   */\n  async requestInstrument(accessCode) {\n    const response = await request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    });\n\n    const body = await response.text();\n    return {\n      body,\n      status: response.headers.get('X-123test-InstrumentStatus'),\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Attach a listener to the instrument, makes use of a promise that resolves\n   * when the button is clicked.\n   * @return {Promise}\n   */\n  waitForInstrumentToSubmit() {\n    const className = 'its123-disabled-loading';\n    const loadingIcon = '<div class=\"its123-loading-spinner\"><div></div><div></div><div></div></div>';\n    const form = document.querySelector(this.api.elements.instrumentFormSelector);\n    const button = form.querySelector('button[type=submit]');\n\n    // Re-enable button if it was previously disabled by this function\n    if (button.classList.contains(className)) {\n      button.disabled = false;\n      button.innerHTML = (button.getAttribute('data-label')) ?\n        button.getAttribute('data-label') : button.innerText;\n      button.classList.remove(className);\n    }\n\n    // Return a new promise that resolves when the submit button is clicked\n    return new Promise((resolve) => {\n      form.addEventListener('submit', (event) => {\n        event.preventDefault();\n\n        // Disable submit button and add class so that we know that\n        // the api js disabled the button (and not individual instrument js)\n        button.disabled = true;\n        button.classList.add(className);\n        // Save content to an attribute to reset it later\n        if (!button.getAttribute('data-label')) {\n          button.setAttribute('data-label', button.innerText);\n        }\n        button.innerHTML = loadingIcon;\n\n        resolve({ form, event });\n      });\n    });\n  }\n\n  /**\n   * Submit a form to the API for a given instrument\n   * @param  {String} accessCode Access code of the instrument\n   * @param  {Object} form       HTML Form\n   * @return {Promise}\n   */\n  async submitInstrumentData(accessCode, form) {\n    this.triggerEvent('instrument-submitting', accessCode);\n\n    const response = await request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'POST',\n      cache: 'no-cache',\n      body: new FormData(form),\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n        'X-123test-epochStart': this.api.epochStart,\n        'X-123test-epochEnd': this.currentEpochTime()\n      },\n    });\n\n\n    const body = await response.text();\n\n    return {\n      body,\n      status: response.headers.get('X-123test-InstrumentStatus'),\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Output an instrument to the DOM\n   * @param  {String} body Instrument HTML\n   * @return {void}\n   */\n  renderInstrument(body) {\n    this.api.elements.productElement.innerHTML = body;\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.productElement.style.display = 'block';\n    this.api.elements.reportElement.style.display = 'none';\n  }\n\n  /**\n   * Add event listeners to radio buttons in instruments\n   * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n   * @return {null}\n   */\n  bindInstrumentStorageListeners(prefix) {\n    if (!this.api.storageEnabled) {\n      return;\n    }\n\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    for (let e = 0; e < elements.length; e += 1) {\n      const input = elements[e];\n\n      if (input.type === 'radio') {\n        // Sync store with current value of the input element\n        if (input.checked) {\n          this.store.set(`${prefix}-${input.name}`, input.value);\n        }\n        input.addEventListener('change', () => {\n          this.store.set(`${prefix}-${input.name}`, input.value);\n        });\n      }\n    }\n  }\n\n  /**\n   * Apply stored instrument state to the DOM\n   * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n   * @return {null}\n   */\n  loadInstrumentStateFromStorage(prefix) {\n    if (!this.api.storageEnabled) {\n      return;\n    }\n\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    let loaded = false;\n    for (let e = 0; e < elements.length; e += 1) {\n      const input = elements[e];\n      const value = this.store.get(`${prefix}-${input.name}`);\n\n      if (value !== null && input.type === 'radio' && input.value === value) {\n        input.checked = true;\n        loaded = true;\n      }\n    }\n\n    if (loaded) {\n      this.triggerEvent('instrument-item-data-loaded', prefix);\n    }\n  }\n\n  /**\n   * Render a report to the DOM\n   *\n   * @param  {String} body report body\n   * @return {Promise}\n   */\n  renderReport(body) {\n    this.api.elements.productElement.style.display = 'none';\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.reportElement.innerHTML = body;\n    this.api.elements.reportElement.style.display = 'block';\n  }\n\n  /**\n   * Add new resources to the DOM\n   *\n   * Returns a new Promise that resolves when all critical assets have been loaded\n   * @param  {Object} resources The resources to load\n   * @return {void}\n   */\n  static loadResources(resources) {\n    if (!resources) {\n      return null;\n    }\n\n    // Map each resource to a new Promise\n    // JS resources resolve when loaded\n    return Promise.all(Object.keys(resources).map(key => (\n      new Promise((resolve, reject) => {\n        const resourceItem = resources[key];\n        const head = document.getElementsByTagName('head')[0];\n\n        // Do not load resources that are already present\n        if (document.querySelectorAll(`script[src=\"${resourceItem.path}\"]`).length > 0) {\n          resolve();\n          return;\n        }\n        switch (resourceItem.type) {\n          case 'js': {\n            const script = document.createElement('script');\n            script.src = resourceItem.path;\n            // Allow some files to not load asynchronous\n            script.async = resourceItem.async || false;\n            // Resolve when loaded\n            script.onload = resolve;\n            // Append to the head of the page\n            head.appendChild(script);\n          }\n            break;\n          case 'css': {\n            const cssLink = document.createElement('link');\n            cssLink.rel = 'stylesheet';\n            cssLink.type = 'text/css';\n            cssLink.media = 'all';\n            cssLink.href = resourceItem.path;\n            // Append to the head of the page\n            head.appendChild(cssLink);\n\n            // Directy resolve css, not critical\n            resolve();\n          }\n            break;\n          default:\n            reject(`Unknown resource type ${resourceItem.type}`);\n        }\n      })\n    )));\n  }\n\n  /**\n   * Run functions for a list of JS resources\n   * @param  {Object} resources\n   * @return {void}\n   */\n  runResourceFunctions(resources) {\n    Object.keys(resources).forEach((key) => {\n      const resource = resources[key];\n      if (resource.type === 'js'\n        && typeof window.its123[resource.func] === 'function') {\n        // Give context as variable\n        window.its123[resource.func](this.api, this);\n      }\n    });\n  }\n\n  /**\n   * Request a report by its access code\n   * @param  {String} accessCode access code for the report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  async requestReport(accessCode, { metaData = '', metaHmac = '' } = {}) {\n    let url;\n    if (metaData.length <= 0 || metaHmac.length <= 0) {\n      url = `${this.api.endpoint}/report/${accessCode}`;\n    } else {\n      url = `${this.api.endpoint}/report/${accessCode}?meta=${metaData}&meta_hmac=${metaHmac}`;\n    }\n\n    const response = await request(url, {\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n      },\n      method: 'GET',\n      mode: 'cors',\n    });\n\n    const body = await response.text();\n\n    return {\n      body,\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Log an exception and retrow\n   * @param  {String} id Error id\n   * @param  {Object} e The error\n   * @param {Object} param Invoked parameter data\n   * @return null\n   */\n  async handleException(id, e, param = {}) {\n    switch (e.status) {\n      case 401:\n      case 403:\n        this.log('error', `123test API Permission error: ${e.message} (${e.status})`);\n        this.triggerEvent('api-permission', { status: 403, message: `${location.hostname} ${this.api.apiKey} ${this.api.productId}` }, 'error');\n        return;\n      case 404:\n        this.log('error', `123test API Product error: ${e.message} (${e.status})`);\n        break;\n      case 408:\n      case 503:\n        this.log('error', '123test API Server error: API is unavailable');\n        this.triggerEvent('api-unavailable', e, 'error');\n        return;\n      case 500:\n        this.log('error', `123test API Server error: ${e.message} (${e.status})`);\n        break;\n      default:\n        break;\n    }\n\n    // Trigger that a unhandled exception has occurred\n    this.log('error', `123test API Server error: Error Unknown, ${param}`);\n    this.triggerEvent('api-unavailable', e, 'error');\n  }\n\n  /**\n   * Utility function to get the url to a PDF report for a given product object\n   * @param  {Object} product               The product that contains the report list\n   * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n   * @return {String}                       Url to the report\n   */\n  getPdfUrl(product, typeName = 'standard') {\n    // Get correct type id for premium or standard pdf\n    const type = (typeName === 'premium') ? 221 : 121;\n    const report = product.reports.find(r => r.type === type);\n\n    if (!report) {\n      throw new Error('No access code for pdf is present in product object.');\n    }\n\n    return `${this.api.endpoint}/report/${report.access_code}`;\n  }\n\n  /**\n   * Send a new event to the listeners\n   * @param  {String} eventName Name of the event\n   * @param  {Object} data      Optional event data\n   * @param  {String} type      Event type\n   * @return {void}\n   */\n  triggerEvent(eventName, data, type = 'info') {\n    const listeners = this.eventListeners[eventName];\n\n    if (listeners && listeners.length > 0) {\n      listeners.forEach(l => l(data));\n    }\n\n    this.log(type, `Event triggered: ${eventName}`);\n  }\n\n  /**\n   * Ouputs a message to the console based on the log logLevel\n   * @param  {String} type    Type of the message\n   * @param  {String} message The message itself\n   * @return {null}\n   */\n  log(type, message) {\n    switch (type) {\n      case 'error':\n        if (this.api.logLevel !== 'none') {\n          console.error(message);\n        }\n        break;\n\n      case 'info':\n      default:\n        if (this.api.logLevel !== 'error' || this.api.logLevel !== 'none') {\n          console.info(message);\n        }\n        break;\n    }\n  }\n\n  currentEpochTime() {\n      const now = new Date()\n      const epoch = Math.round(now.getTime() / 1000);\n      return epoch;\n  }\n\n  /**\n   * Register a new event listener\n   * @param  {String|Array}   eventName Name of the event\n   * @param  {Function} callback\n   * @return {void}\n   */\n  on(eventName, callback) {\n    let events = [];\n\n    if (Array.isArray(eventName)) {\n      events = eventName;\n    } else {\n      events.push(eventName);\n    }\n\n    events.forEach((event) => {\n      if (!this.eventListeners[event]) {\n        this.eventListeners[event] = [];\n      }\n\n      this.eventListeners[event].push(callback);\n    });\n  }\n}\n\nexport default Its123;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Its123.js","import { timeoutPromise } from './promise';\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  error.status = response.status;\n\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n * @return {object}           The response data\n */\nexport default function request(url, options = {}, timeout = 8000) {\n  return timeoutPromise(timeout, fetch(url, options)\n    .then(checkStatus));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/request.js","/**\n * Utility wrapper around localStorage.\n *\n * Adds convenience functions to save and retrieve items\n * from the local storage store.\n */\nclass ClientStorage {\n\n  constructor(enabled = true, prefix = 'its123') {\n    this.store = window.localStorage;\n    this.storeEnabled = enabled;\n    this.prefix = prefix;\n\n    if (this.storeEnabled) {\n      // Test availability of local storage\n      const testItem = 'test';\n      try {\n        this.store.setItem(testItem, testItem);\n        this.store.removeItem(testItem);\n        this.storeEnabled = true;\n      } catch (e) {\n        this.storeEnabled = false;\n      }\n    }\n  }\n\n  /**\n   * Store a product in the local storage\n   * @param  {String} productId Id of the product\n   * @param  {object} product   Product information\n   * @param  {String} user      User UUID\n   * @return {void}\n   */\n  saveProduct(productId, product, user) {\n    // Add new record\n    const productData = {\n      ...product,\n      user,\n      started: Date.now(),\n    };\n\n    this.set(productId, JSON.stringify(productData));\n  }\n\n  /**\n   * Load a product from the storage\n   *\n   * @param  {String} productId             Product id\n   * @param  {String} [user='']             User UUID\n   * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n   * @return {null|Object}\n   */\n  loadProduct(productId, user = '', expirationTime = 3600) {\n    const item = this.get(productId);\n\n    // Check presence of object\n    if (!item) {\n      return null;\n    }\n\n    const product = JSON.parse(item);\n\n    if (product && (product.started + (expirationTime * 1000)) > Date.now()\n      && product.user === user) {\n      return product;\n    }\n\n    return null;\n  }\n\n  /**\n   * Set the current state of an instrument in storage\n   * @param  {String} accessCode Access code for instrument\n   * @param  {String} status     Status indicator\n   * @return {void}\n   */\n  saveInstrumentStatus(accessCode, status) {\n    this.set(accessCode, status);\n  }\n\n  /**\n   * Get status of an instrument from storage\n   * @param  {String} accessCode Access code for instrument\n   * @return {String|null} Status\n   */\n  loadInstrumentStatus(accessCode) {\n    return this.get(accessCode);\n  }\n\n  /**\n   * Save an item to storage\n   * @param  {String} id   identifier\n   * @param  {mixed} item Value to store\n   * @return {null}\n   */\n  set(id, item) {\n    if (!this.storeEnabled) {\n      return;\n    }\n\n    this.store.setItem(`${this.prefix}-${id}`, item);\n  }\n\n  /**\n   * Retrieve an item from storage\n   * @param  {String} id Storage identifier\n   * @return {mixed}    The value\n   */\n  get(id) {\n    if (!this.storeEnabled) {\n      return null;\n    }\n\n    return this.store.getItem(`${this.prefix}-${id}`);\n  }\n\n  /**\n   * Remove item from storage\n   * @param  {String} id Storage identifier\n   * @return {null}\n   */\n  remove(id) {\n    if (!this.storeEnabled) {\n      return;\n    }\n\n    this.store.removeItem(`${this.prefix}-${id}`);\n  }\n\n  /**\n   * Remove all local storage elements that start with a given prefix\n   * @param  {String} prefix Prefix to search for\n   * @return {null}\n   */\n  removeByPrefix(prefix) {\n    if (!this.storeEnabled) {\n      return;\n    }\n\n    for (let i = this.store.length - 1; i >= 0; i -= 1) {\n      if (this.store.key(i).startsWith(`${this.prefix}-${prefix}`)) {\n        this.store.removeItem(this.store.key(i));\n      }\n    }\n  }\n\n  /**\n   * Clear the local storage of all items associated with a product id\n   * @return {void}\n   */\n  clearProduct(productId) {\n    const productJson = this.get(productId);\n\n    if (!productJson) {\n      return;\n    }\n\n    const product = JSON.parse(productJson);\n    product.slots.instruments.forEach((i) => {\n      this.remove(i.access_code);\n      this.removeByPrefix(i.access_code);\n    });\n    this.remove(productId);\n  }\n}\n\nexport default ClientStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/storage.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 32\n// module chunks = 0 1 2","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 33\n// module chunks = 0 1 2"],"sourceRoot":""}