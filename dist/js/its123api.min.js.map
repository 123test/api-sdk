{"version":3,"sources":["webpack:///its123api.min.js","webpack:///webpack/bootstrap 430b2b95333818c8cd23?955b*","webpack:///./src/main.js","webpack:///./src/util/promise.js?f80b*","webpack:///./src/Api/Its123.js?eeca*","webpack:///./src/util/request.js?0ff7*","webpack:///./src/util/storage.js?75dd*","webpack:///./~/regenerator-runtime/runtime.js?1aab*"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_Its","_Its2","window","Its123","15","timeoutPromise","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","error","Error","status","then","res","clearTimeout","err","tryAtMost","maxRetries","timeout","fn","timeoutFactor","arguments","length","undefined","current","retryUntilResolved","Object","defineProperty","value","24","_asyncToGenerator","gen","apply","this","step","key","arg","info","done","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_request","_request2","_promise","_storage","_storage2","defaultApiConfig","domain","version","logLevel","elements","instrumentFormSelector","loadingElementId","productElementId","reportElementId","loadingElement","productElement","reportElement","maxHttpRetries","retryDelay","maxSubmitRetries","storageEnabled","storagePrefix","apiKey","productId","apiConfig","api","endpoint","document","getElementById","eventListeners","store","loadProduct","_x2","_ref","regeneratorRuntime","mark","_callee","_ref2","_ref2$renderReport","renderReport","_ref2$user","user","wrap","_context","prev","next","loadAndRunProduct","abrupt","sent","t0","clearProduct","handleException","stop","prefetchProduct","_x4","_ref3","_callee2","product","form","_ref4","_ref4$renderReport","_ref4$user","_context2","loadInstrumentStateFromStorage","bindInstrumentStorageListeners","waitForInstrumentToSubmit","removeByPrefix","restartProduct","_x6","_ref5","_callee3","_ref6","_ref6$renderReport","_ref6$user","_context3","_x8","_ref7","_callee4","instruments","accessCode","result","_ref9","body","resources","_this","_ref8","_ref8$renderReport","_ref8$user","prefetchedForm","_context4","style","display","requestProduct","saveProduct","triggerEvent","slots","filter","loadInstrumentStatus","access_code","requestInstrument","processApiInstrumentResponse","requestReport","reports","loadResources","runResourceFunctions","loadReport","_x11","_ref10","_callee5","_ref12","_this2","_ref11","metaData","metaHmac","_context5","_x13","_x14","_ref13","_callee6","_ref14","_ref14$form","_context6","t1","t2","processFormSubmit","t3","saveInstrumentStatus","renderInstrument","t4","t5","t6","_x15","_ref15","_callee8","lastError","_loop","_ret","_this3","submittedForm","_context8","_callee7","_ref16","_context7","submitInstrumentData","v","delegateYield","_x17","_x18","_ref17","_callee9","headers","response","json","_context9","Content-Type","X-123test-ApiKey","X-123test-ProductId","method","mode","product_access_code","requestProductInfo","_x19","_ref18","_callee10","_context10","_x20","_ref19","_callee11","_context11","cache","X-123test-InstrumentRun","text","get","JSON","parse","className","loadingIcon","querySelector","button","classList","contains","disabled","innerHTML","getAttribute","innerText","remove","addEventListener","event","preventDefault","add","setAttribute","_x21","_x22","_ref20","_callee12","_context12","FormData","prefix","_this4","getElementsByTagName","_loop2","e","input","type","checked","set","name","_this5","keys","forEach","resource","its123","func","_x23","_ref21","_callee13","url","_ref22","_ref22$metaData","_ref22$metaHmac","_context13","_x25","_x26","_ref23","_callee14","param","_context14","log","message","location","hostname","typeName","report","find","r","eventName","data","listeners","l","console","callback","_this6","events","Array","isArray","push","all","map","resourceItem","head","querySelectorAll","path","script","createElement","src","async","onload","appendChild","cssLink","rel","media","href","25","checkStatus","statusText","request","options","fetch","26","ClientStorage","enabled","localStorage","storeEnabled","testItem","setItem","removeItem","productData","started","Date","now","stringify","expirationTime","item","getItem","startsWith","productJson","32","global","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","process","bind","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","GenStateSuspendedYield","return","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","Op","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","iter","toString","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown"],"mappings":"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","file":"its123api.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Its = __webpack_require__(24);\n\t\n\tvar _Its2 = _interopRequireDefault(_Its);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// Bind Its123 to the global window\n\twindow.Its123 = _Its2['default'];\n\n/***/ }),\n\n/***/ 15:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.timeoutPromise = timeoutPromise;\n\texports.tryAtMost = tryAtMost;\n\texports.retryUntilResolved = retryUntilResolved;\n\t/**\n\t * Promise with timeout function\n\t * @param  {Number} ms      Miliseconds to wait before promise is rejected\n\t * @param  {Promise} promise The promise to run\n\t * @return {Promise}         Promise with timeout\n\t */\n\tfunction timeoutPromise(ms, promise) {\n\t  return new Promise(function (resolve, reject) {\n\t    // Create timer that rejects promise after ms miliseconds\n\t    var timeoutId = setTimeout(function () {\n\t      var error = new Error('timeout');\n\t      error.status = 408;\n\t      reject(error);\n\t    }, ms);\n\t\n\t    // Clear timeout if promise resolves/rejects on its own\n\t    promise.then(function (res) {\n\t      clearTimeout(timeoutId);\n\t      resolve(res);\n\t    }, function (err) {\n\t      clearTimeout(timeoutId);\n\t      reject(err);\n\t    });\n\t  });\n\t}\n\t\n\t/**\n\t * Decorates a promis-creating function with a retry functionality (by recursion)\n\t * @param  {Number}   maxRetries  Max number of retries\n\t * @param  {Number}   timeout     Miliseconds to wait\n\t * @param  {Function} fn          Function that creates and returns a promise\n\t * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n\t * @param  {Number}   [current=0] Current iteration in the retry loop\n\t * @return {Promise}\n\t */\n\tfunction tryAtMost(maxRetries, timeout, fn) {\n\t  var timeoutFactor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\t  var current = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    return fn().then(resolve)['catch'](function (error) {\n\t      if (current < maxRetries) {\n\t        setTimeout(function () {\n\t          return resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1));\n\t        }, timeout);\n\t      } else {\n\t        reject(error);\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction retryUntilResolved(fn) {\n\t  return new Promise(function (resolve) {\n\t    return fn().then(resolve)['catch'](function () {\n\t      return resolve(retryUntilResolved(fn));\n\t    });\n\t  });\n\t}\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * 123Test Api v2\n\tn\tauthor Wouter Bulten <github.com/wouterbulten>\n\tauthor Theo den Hollander <github.com/theodenhollander>\n\tlicense\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * The MIT License (MIT)\n\tn\topyright (c) 2015 123test\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * of this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in all\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * copies or substantial portions of the Software.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\tn\tn\tn\tn\tn\tn\tn\tn\t\n\t__webpack_require__(32);\n\t\n\tvar _request = __webpack_require__(25);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tvar _promise = __webpack_require__(15);\n\t\n\tvar _storage = __webpack_require__(26);\n\t\n\tvar _storage2 = _interopRequireDefault(_storage);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Default configuration for api, can be overriden by user\n\t * @type {Object}\n\t */\n\tvar defaultApiConfig = {\n\t  // Domain config\n\t  domain: 'https://api.123test.com',\n\t  version: 'v2',\n\t\n\t  // Environment config\n\t  logLevel: 'all', // One of: all, info, error, none\n\t\n\t  // DOM config\n\t  elements: {\n\t    // Selector used to bind events to instrument forms, we advise\n\t    // not to alter this selector.\n\t    instrumentFormSelector: 'form.its123-instrument',\n\t    // ID for the loading div\n\t    loadingElementId: 'its123api-loading',\n\t    // ID for the instrument/product div\n\t    productElementId: 'its123api-product',\n\t    // ID for the report div\n\t    reportElementId: 'its123api-report',\n\t\n\t    // Internal placeholders for the DOM elements, do not set these to any values\n\t    loadingElement: null,\n\t    productElement: null,\n\t    reportElement: null\n\t  },\n\t\n\t  // Number of retries some fetch request may make\n\t  maxHttpRetries: 2,\n\t  // Initial delay before a retry\n\t  retryDelay: 8000,\n\t  // Number of times a user can try to resubmit a form\n\t  maxSubmitRetries: 10,\n\t\n\t  // Whether to use localStorage for caching\n\t  storageEnabled: true,\n\t  storagePrefix: 'its123Api',\n\t\n\t  // Public api key used for every request\n\t  apiKey: 'not-set',\n\t\n\t  // loaded product ID\n\t  productId: 'not-set'\n\t};\n\t\n\t/**\n\t * Main API class\n\t */\n\t\n\tvar Its123 = function () {\n\t\n\t  /**\n\t   * Create new Api object\n\t   * @param  {Object} [apiConfig={}] Api configuration\n\t   * @return {void}\n\t   */\n\t  function Its123() {\n\t    var apiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Its123);\n\t\n\t    // Set api config to default and override with parameters\n\t    this.api = _extends({}, defaultApiConfig, apiConfig);\n\t    // Construct correct api end point\n\t    this.api.endpoint = this.api.domain + '/' + this.api.version;\n\t\n\t    // Check for valid api key\n\t    if (this.api.apiKey === 'not-set') {\n\t      throw new Error('Api key must be set when initalising Its123 object. Please check your api config.');\n\t    }\n\t\n\t    // Query the DOM and set options\n\t    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n\t    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n\t    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n\t    if (!this.api.elements.loadingElement || !this.api.elements.productElement || !this.api.elements.reportElement) {\n\t      throw new Error('Element for loading, product or report not found. Please check your HTML and Api config.');\n\t    }\n\t\n\t    // Placeholder for eventlisteners\n\t    this.eventListeners = {};\n\t\n\t    // Create new storage object for localStorage functionality\n\t    this.store = new _storage2['default'](this.api.storageEnabled, this.api.storagePrefix);\n\t  }\n\t\n\t  /**\n\t   * Wrapper around loadAndRunProduct with error handling\n\t   *\n\t   * @param  {String} productId product to load\n\t   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n\t   * @return {Promise}\n\t   * @see loadAndRunProduct()\n\t   */\n\t\n\t\n\t  _createClass(Its123, [{\n\t    key: 'loadProduct',\n\t    value: function () {\n\t      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(productId) {\n\t        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref2$renderReport = _ref2.renderReport,\n\t            renderReport = _ref2$renderReport === undefined ? true : _ref2$renderReport,\n\t            _ref2$user = _ref2.user,\n\t            user = _ref2$user === undefined ? '' : _ref2$user;\n\t\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                _context.prev = 0;\n\t\n\t                this.api.productId = productId;\n\t                _context.next = 4;\n\t                return this.loadAndRunProduct(productId, { renderReport: renderReport, user: user });\n\t\n\t              case 4:\n\t                return _context.abrupt('return', _context.sent);\n\t\n\t              case 7:\n\t                _context.prev = 7;\n\t                _context.t0 = _context['catch'](0);\n\t\n\t                // Something could be wrong with our local store,\n\t                // clear it to prevent any future errors\n\t                this.store.clearProduct(productId);\n\t                this.handleException('loadProduct', _context.t0, { productId: productId, renderReport: renderReport, user: user });\n\t\n\t                throw _context.t0;\n\t\n\t              case 12:\n\t              case 'end':\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee, this, [[0, 7]]);\n\t      }));\n\t\n\t      function loadProduct(_x2) {\n\t        return _ref.apply(this, arguments);\n\t      }\n\t\n\t      return loadProduct;\n\t    }()\n\t\n\t    /**\n\t     * Start a product run given an prefetched insrument\n\t     * @param  {String} productId product to load\n\t     * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n\t     * @return {Promise}\n\t     * @see loadAndRunProduct()\n\t     */\n\t\n\t  }, {\n\t    key: 'prefetchProduct',\n\t    value: function () {\n\t      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(productId) {\n\t        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref4$renderReport = _ref4.renderReport,\n\t            renderReport = _ref4$renderReport === undefined ? true : _ref4$renderReport,\n\t            _ref4$user = _ref4.user,\n\t            user = _ref4$user === undefined ? '' : _ref4$user;\n\t\n\t        var product, form;\n\t        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t          while (1) {\n\t            switch (_context2.prev = _context2.next) {\n\t              case 0:\n\t                // First check for existing run in storage\n\t                product = this.store.loadProduct(productId, user);\n\t\n\t                if (!product) {\n\t                  _context2.next = 3;\n\t                  break;\n\t                }\n\t\n\t                return _context2.abrupt('return', this.loadProduct(productId, { renderReport: renderReport, user: user }));\n\t\n\t              case 3:\n\t                _context2.prev = 3;\n\t\n\t                // Enable localstorage support for anonymous instruments\n\t                // Use the product key as the id to prevent loading data from other products\n\t                this.loadInstrumentStateFromStorage('st-' + productId);\n\t                this.bindInstrumentStorageListeners('st-' + productId);\n\t\n\t                // Wait for prefetched instrument to submit\n\t                _context2.next = 8;\n\t                return this.waitForInstrumentToSubmit();\n\t\n\t              case 8:\n\t                form = _context2.sent;\n\t\n\t\n\t                // Clear local storage from temporary instrument data\n\t                this.store.removeByPrefix('st-' + productId);\n\t\n\t                return _context2.abrupt('return', this.loadAndRunProduct(productId, { renderReport: renderReport, user: user }, form));\n\t\n\t              case 13:\n\t                _context2.prev = 13;\n\t                _context2.t0 = _context2['catch'](3);\n\t\n\t                // Something could be wrong with our local store,\n\t                // clear it to prevent any future errors\n\t                this.store.clearProduct(productId);\n\t\n\t                throw _context2.t0;\n\t\n\t              case 17:\n\t              case 'end':\n\t                return _context2.stop();\n\t            }\n\t          }\n\t        }, _callee2, this, [[3, 13]]);\n\t      }));\n\t\n\t      function prefetchProduct(_x4) {\n\t        return _ref3.apply(this, arguments);\n\t      }\n\t\n\t      return prefetchProduct;\n\t    }()\n\t\n\t    /**\n\t     * Restarts a product by clearing any local data\n\t     *\n\t     * @param  {String} productId product to load\n\t     * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n\t     * @return {Promise}\n\t     * @see loadAndRunProduct()\n\t     */\n\t\n\t  }, {\n\t    key: 'restartProduct',\n\t    value: function () {\n\t      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(productId) {\n\t        var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref6$renderReport = _ref6.renderReport,\n\t            renderReport = _ref6$renderReport === undefined ? true : _ref6$renderReport,\n\t            _ref6$user = _ref6.user,\n\t            user = _ref6$user === undefined ? '' : _ref6$user;\n\t\n\t        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t          while (1) {\n\t            switch (_context3.prev = _context3.next) {\n\t              case 0:\n\t                this.store.clearProduct(productId);\n\t                return _context3.abrupt('return', this.loadProduct(productId, { renderReport: renderReport, user: user }));\n\t\n\t              case 2:\n\t              case 'end':\n\t                return _context3.stop();\n\t            }\n\t          }\n\t        }, _callee3, this);\n\t      }));\n\t\n\t      function restartProduct(_x6) {\n\t        return _ref5.apply(this, arguments);\n\t      }\n\t\n\t      return restartProduct;\n\t    }()\n\t\n\t    /**\n\t     * Load and run a product\n\t     *\n\t     * Runs all the required sub steps from instrument to report. All promises are chained\n\t     * and the final promise returns the product data when resolved.\n\t     *\n\t     * Will automatically render the first report that is available. Set `renderReport` to false\n\t     * to counter this behaviour.\n\t     *\n\t     * Data structure of the product object:\n\t     *\n\t     * product = {\n\t     *  slots: {\n\t     *    instruments: [],\n\t     *    respondent: {},\n\t     *  },\n\t     *  reports: [],\n\t     *  access_code: null,\n\t     * };\n\t     *\n\t     * @param  {String} productId product to load\n\t     * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n\t     *                                       report render functions\n\t     * @param  {String}  [user=''] Optional user UUID\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadAndRunProduct',\n\t    value: function () {\n\t      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(productId) {\n\t        var _this = this;\n\t\n\t        var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref8$renderReport = _ref8.renderReport,\n\t            renderReport = _ref8$renderReport === undefined ? true : _ref8$renderReport,\n\t            _ref8$user = _ref8.user,\n\t            user = _ref8$user === undefined ? '' : _ref8$user;\n\t\n\t        var prefetchedForm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t\n\t        var product, instruments, i, accessCode, result, _ref9, body, resources;\n\t\n\t        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t          while (1) {\n\t            switch (_context4.prev = _context4.next) {\n\t              case 0:\n\t                product = null;\n\t\n\t                // Show loading div (only when not in prefetch mode)\n\t\n\t                if (!prefetchedForm) {\n\t                  this.api.elements.productElement.style.display = 'none';\n\t                  this.api.elements.loadingElement.style.display = 'block';\n\t                }\n\t\n\t                // Try to load product information from local storage, if it fails\n\t                // fall back to a API request\n\t                product = this.store.loadProduct(productId, user);\n\t\n\t                if (product) {\n\t                  _context4.next = 8;\n\t                  break;\n\t                }\n\t\n\t                _context4.next = 6;\n\t                return this.requestProduct(productId, user);\n\t\n\t              case 6:\n\t                product = _context4.sent;\n\t\n\t\n\t                // Store the requested product in the local store for future requests\n\t                this.store.saveProduct(productId, product, user);\n\t\n\t              case 8:\n\t                this.triggerEvent('product-loaded', product);\n\t                instruments = product.slots.instruments;\n\t\n\t                this.triggerEvent('instruments-loaded', instruments);\n\t\n\t                // Filter any instruments that already have been completed\n\t                // Prevents unnecessary requests to the API\n\t                instruments = instruments.filter(function (i) {\n\t                  var status = _this.store.loadInstrumentStatus(i.access_code);\n\t\n\t                  switch (status) {\n\t                    case 'ended-items':\n\t                    case 'ended-skipped':\n\t                    case 'ended-time':\n\t                      _this.triggerEvent('instrument-already-completed', { accessCode: i.access_code, status: status });\n\t                      return false;\n\t                    case 'in-progress':\n\t                      _this.triggerEvent('instrument-continue', { accessCode: i.access_code, status: status });\n\t                      return true;\n\t                    case 'started':\n\t                    default:\n\t                      return true;\n\t                  }\n\t                });\n\t\n\t                i = 0;\n\t\n\t              case 13:\n\t                if (!(i < instruments.length)) {\n\t                  _context4.next = 30;\n\t                  break;\n\t                }\n\t\n\t                accessCode = instruments[i].access_code;\n\t                result = void 0;\n\t\n\t                if (!(i === 0 && prefetchedForm)) {\n\t                  _context4.next = 21;\n\t                  break;\n\t                }\n\t\n\t                // Skip requesting the instrument when it is the first and a prefetched\n\t                // form is on the page.\n\t                this.triggerEvent('instrument-prefetched', {});\n\t                result = { status: 'prefetched', form: prefetchedForm };\n\t                _context4.next = 25;\n\t                break;\n\t\n\t              case 21:\n\t                _context4.next = 23;\n\t                return this.requestInstrument(accessCode);\n\t\n\t              case 23:\n\t                result = _context4.sent;\n\t\n\t                this.triggerEvent('instrument-started', { accessCode: accessCode, status: result.status });\n\t\n\t              case 25:\n\t                _context4.next = 27;\n\t                return this.processApiInstrumentResponse(accessCode, result);\n\t\n\t              case 27:\n\t                i += 1;\n\t                _context4.next = 13;\n\t                break;\n\t\n\t              case 30:\n\t                if (!renderReport) {\n\t                  _context4.next = 41;\n\t                  break;\n\t                }\n\t\n\t                _context4.next = 33;\n\t                return this.requestReport(product.reports[0].access_code);\n\t\n\t              case 33:\n\t                _ref9 = _context4.sent;\n\t                body = _ref9.body;\n\t                resources = _ref9.resources;\n\t                _context4.next = 38;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 38:\n\t                this.renderReport(body);\n\t                this.runResourceFunctions(resources);\n\t                this.triggerEvent('report-ready');\n\t\n\t              case 41:\n\t\n\t                // Remove this session from the local storage\n\t                this.store.clearProduct(productId);\n\t                // Trigger event and pass product info\n\t                this.triggerEvent('product-completed', product);\n\t\n\t                return _context4.abrupt('return', product);\n\t\n\t              case 44:\n\t              case 'end':\n\t                return _context4.stop();\n\t            }\n\t          }\n\t        }, _callee4, this);\n\t      }));\n\t\n\t      function loadAndRunProduct(_x8) {\n\t        return _ref7.apply(this, arguments);\n\t      }\n\t\n\t      return loadAndRunProduct;\n\t    }()\n\t\n\t    /**\n\t     * Load an render a report by its access code\n\t     * @param  {String} accessCode Access code for report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadReport',\n\t    value: function () {\n\t      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(accessCode) {\n\t        var _this2 = this;\n\t\n\t        var _ref11 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            metaData = _ref11.metaData,\n\t            metaHmac = _ref11.metaHmac;\n\t\n\t        var _ref12, body, resources;\n\t\n\t        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t          while (1) {\n\t            switch (_context5.prev = _context5.next) {\n\t              case 0:\n\t                _context5.prev = 0;\n\t                _context5.next = 3;\n\t                return (0, _promise.tryAtMost)(this.api.maxHttpRetries, this.api.retryDelay, function () {\n\t                  return _this2.requestReport(accessCode, { metaData: metaData, metaHmac: metaHmac });\n\t                });\n\t\n\t              case 3:\n\t                _ref12 = _context5.sent;\n\t                body = _ref12.body;\n\t                resources = _ref12.resources;\n\t                _context5.next = 8;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 8:\n\t                this.renderReport(body);\n\t                this.runResourceFunctions(resources);\n\t                this.triggerEvent('report-ready');\n\t                _context5.next = 17;\n\t                break;\n\t\n\t              case 13:\n\t                _context5.prev = 13;\n\t                _context5.t0 = _context5['catch'](0);\n\t\n\t                this.handleException('loadReport', _context5.t0, { accessCode: accessCode, metaData: metaData, metaHmac: metaHmac });\n\t\n\t                throw _context5.t0;\n\t\n\t              case 17:\n\t              case 'end':\n\t                return _context5.stop();\n\t            }\n\t          }\n\t        }, _callee5, this, [[0, 13]]);\n\t      }));\n\t\n\t      function loadReport(_x11) {\n\t        return _ref10.apply(this, arguments);\n\t      }\n\t\n\t      return loadReport;\n\t    }()\n\t\n\t    /**\n\t     * Process a single API response from an instrument call\n\t     *\n\t     * When the instrument is still running the function will return a new Promise\n\t     * that waits for a form submit.\n\t     *\n\t     * @param  {String} accessCode Access code for this instrument\n\t     * @param  {String} status     Current instrument status\n\t     * @param  {Array} resources  Resources to load\n\t     * @param  {String} body       Html to put in the DOM\n\t     * @param  {Object} form      (Optional) submitted form+event object for prefetch requests\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'processApiInstrumentResponse',\n\t    value: function () {\n\t      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(accessCode, _ref14) {\n\t        var status = _ref14.status,\n\t            resources = _ref14.resources,\n\t            body = _ref14.body,\n\t            _ref14$form = _ref14.form,\n\t            form = _ref14$form === undefined ? null : _ref14$form;\n\t        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t          while (1) {\n\t            switch (_context6.prev = _context6.next) {\n\t              case 0:\n\t                _context6.t0 = status;\n\t                _context6.next = _context6.t0 === 'prefetched' ? 3 : _context6.t0 === 'started' ? 13 : _context6.t0 === 'in-progress' ? 13 : _context6.t0 === 'ended-items' ? 29 : _context6.t0 === 'ended-skipped' ? 29 : _context6.t0 === 'ended-time' ? 29 : 32;\n\t                break;\n\t\n\t              case 3:\n\t                if (form) {\n\t                  _context6.next = 5;\n\t                  break;\n\t                }\n\t\n\t                throw new Error('Cannot handle prefetch state without existing instrument form');\n\t\n\t              case 5:\n\t                _context6.t1 = this;\n\t                _context6.t2 = accessCode;\n\t                _context6.next = 9;\n\t                return this.processFormSubmit(accessCode, form);\n\t\n\t              case 9:\n\t                _context6.t3 = _context6.sent;\n\t                _context6.next = 12;\n\t                return _context6.t1.processApiInstrumentResponse.call(_context6.t1, _context6.t2, _context6.t3);\n\t\n\t              case 12:\n\t                return _context6.abrupt('return', _context6.sent);\n\t\n\t              case 13:\n\t                this.store.saveInstrumentStatus(accessCode, status);\n\t\n\t                // Wait for resources to load\n\t                _context6.next = 16;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 16:\n\t\n\t                this.renderInstrument(body);\n\t\n\t                // Try to load item data from local storage\n\t                this.loadInstrumentStateFromStorage(accessCode);\n\t                this.bindInstrumentStorageListeners(accessCode);\n\t\n\t                this.runResourceFunctions(resources);\n\t                this.triggerEvent('instrument-submitted');\n\t                // Run function again until instrument has ended\n\t                _context6.t4 = this;\n\t                _context6.t5 = accessCode;\n\t                _context6.next = 25;\n\t                return this.processFormSubmit(accessCode);\n\t\n\t              case 25:\n\t                _context6.t6 = _context6.sent;\n\t                _context6.next = 28;\n\t                return _context6.t4.processApiInstrumentResponse.call(_context6.t4, _context6.t5, _context6.t6);\n\t\n\t              case 28:\n\t                return _context6.abrupt('return', _context6.sent);\n\t\n\t              case 29:\n\t                this.store.saveInstrumentStatus(accessCode, status);\n\t                this.triggerEvent('instrument-completed', { accessCode: accessCode, status: status });\n\t                return _context6.abrupt('break', 33);\n\t\n\t              case 32:\n\t                throw new Error('Unexpected instrument status ' + status);\n\t\n\t              case 33:\n\t                return _context6.abrupt('return', {});\n\t\n\t              case 34:\n\t              case 'end':\n\t                return _context6.stop();\n\t            }\n\t          }\n\t        }, _callee6, this);\n\t      }));\n\t\n\t      function processApiInstrumentResponse(_x13, _x14) {\n\t        return _ref13.apply(this, arguments);\n\t      }\n\t\n\t      return processApiInstrumentResponse;\n\t    }()\n\t\n\t    /**\n\t     * Process a form submit event\n\t     * @param {String} accessCode Access code of the instrument\n\t     * @param {Object} submittedForm (Optional) object with two values: event and form.\n\t     *                               This form is used instead of waiting for a new\n\t     *                               submit event.\n\t     */\n\t\n\t  }, {\n\t    key: 'processFormSubmit',\n\t    value: function () {\n\t      var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(accessCode) {\n\t        var _this3 = this;\n\t\n\t        var submittedForm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t        var lastError, _loop, i, _ret;\n\t\n\t        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n\t          while (1) {\n\t            switch (_context8.prev = _context8.next) {\n\t              case 0:\n\t                lastError = null;\n\t                _loop = /*#__PURE__*/regeneratorRuntime.mark(function _callee7(i) {\n\t                  var _ref16, form, result;\n\t\n\t                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n\t                    while (1) {\n\t                      switch (_context7.prev = _context7.next) {\n\t                        case 0:\n\t                          if (!(i === 0 && submittedForm)) {\n\t                            _context7.next = 4;\n\t                            break;\n\t                          }\n\t\n\t                          _context7.t0 = submittedForm;\n\t                          _context7.next = 7;\n\t                          break;\n\t\n\t                        case 4:\n\t                          _context7.next = 6;\n\t                          return _this3.waitForInstrumentToSubmit();\n\t\n\t                        case 6:\n\t                          _context7.t0 = _context7.sent;\n\t\n\t                        case 7:\n\t                          _ref16 = _context7.t0;\n\t                          form = _ref16.form;\n\t                          _context7.prev = 9;\n\t                          _context7.next = 12;\n\t                          return (0, _promise.tryAtMost)(_this3.api.maxHttpRetries, _this3.api.retryDelay, function () {\n\t                            return _this3.submitInstrumentData(accessCode, form);\n\t                          });\n\t\n\t                        case 12:\n\t                          result = _context7.sent;\n\t                          return _context7.abrupt('return', {\n\t                            v: result\n\t                          });\n\t\n\t                        case 16:\n\t                          _context7.prev = 16;\n\t                          _context7.t1 = _context7['catch'](9);\n\t                          _context7.t2 = _context7.t1.status;\n\t                          _context7.next = _context7.t2 === 404 ? 21 : 23;\n\t                          break;\n\t\n\t                        case 21:\n\t                          _this3.triggerEvent('instrument-run-not-found', null, 'error');\n\t                          // We cannot recover from a 404 in this state, throw error to break loop\n\t                          throw _context7.t1;\n\t\n\t                        case 23:\n\t                          _this3.triggerEvent('instrument-submit-failed', null, 'error');\n\t                          return _context7.abrupt('break', 25);\n\t\n\t                        case 25:\n\t                          // Save error for later, we first let the user retry\n\t                          lastError = _context7.t1;\n\t\n\t                        case 26:\n\t                        case 'end':\n\t                          return _context7.stop();\n\t                      }\n\t                    }\n\t                  }, _callee7, _this3, [[9, 16]]);\n\t                });\n\t                i = 0;\n\t\n\t              case 3:\n\t                if (!(i < this.api.maxSubmitRetries)) {\n\t                  _context8.next = 11;\n\t                  break;\n\t                }\n\t\n\t                return _context8.delegateYield(_loop(i), 't0', 5);\n\t\n\t              case 5:\n\t                _ret = _context8.t0;\n\t\n\t                if (!((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\")) {\n\t                  _context8.next = 8;\n\t                  break;\n\t                }\n\t\n\t                return _context8.abrupt('return', _ret.v);\n\t\n\t              case 8:\n\t                i += 1;\n\t                _context8.next = 3;\n\t                break;\n\t\n\t              case 11:\n\t                throw lastError;\n\t\n\t              case 12:\n\t              case 'end':\n\t                return _context8.stop();\n\t            }\n\t          }\n\t        }, _callee8, this);\n\t      }));\n\t\n\t      function processFormSubmit(_x15) {\n\t        return _ref15.apply(this, arguments);\n\t      }\n\t\n\t      return processFormSubmit;\n\t    }()\n\t\n\t    /**\n\t     * (Async) Request a product from the api\n\t     *\n\t     * Promise returns an object contains all the instruments\n\t     * @param  {String} productId      ID of the product\n\t     * @param  {String} user UUID v4\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProduct',\n\t    value: function () {\n\t      var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(productId, user) {\n\t        var headers, response, json;\n\t        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n\t          while (1) {\n\t            switch (_context9.prev = _context9.next) {\n\t              case 0:\n\t                headers = {\n\t                  'Content-Type': 'application/json',\n\t                  'X-123test-ApiKey': this.api.apiKey,\n\t                  'X-123test-ProductId': productId\n\t                };\n\t\n\t                if (user && user.length === 36) {\n\t                  headers['X-123test-Respondent'] = user;\n\t                }\n\t\n\t                _context9.prev = 2;\n\t                _context9.next = 5;\n\t                return (0, _request2['default'])(this.api.endpoint + '/product/request-product', {\n\t                  method: 'GET',\n\t                  mode: 'cors',\n\t                  headers: headers\n\t                });\n\t\n\t              case 5:\n\t                response = _context9.sent;\n\t                _context9.next = 8;\n\t                return response.json();\n\t\n\t              case 8:\n\t                json = _context9.sent;\n\t                return _context9.abrupt('return', {\n\t                  slots: json.slots,\n\t                  reports: json.reports,\n\t                  product_access_code: json.product_access_code\n\t                });\n\t\n\t              case 12:\n\t                _context9.prev = 12;\n\t                _context9.t0 = _context9['catch'](2);\n\t                _context9.t1 = _context9.t0.status;\n\t                _context9.next = _context9.t1 === 401 ? 17 : _context9.t1 === 400 ? 19 : _context9.t1 === 403 ? 21 : 23;\n\t                break;\n\t\n\t              case 17:\n\t                this.triggerEvent('invalid-api-key', _context9.t0.response, 'error');\n\t                return _context9.abrupt('break', 23);\n\t\n\t              case 19:\n\t                this.triggerEvent('product-not-found', _context9.t0.response, 'error');\n\t                return _context9.abrupt('break', 23);\n\t\n\t              case 21:\n\t                this.triggerEvent('product-no-access', _context9.t0.response, 'error');\n\t                return _context9.abrupt('break', 23);\n\t\n\t              case 23:\n\t                throw _context9.t0;\n\t\n\t              case 24:\n\t              case 'end':\n\t                return _context9.stop();\n\t            }\n\t          }\n\t        }, _callee9, this, [[2, 12]]);\n\t      }));\n\t\n\t      function requestProduct(_x17, _x18) {\n\t        return _ref17.apply(this, arguments);\n\t      }\n\t\n\t      return requestProduct;\n\t    }()\n\t\n\t    /**\n\t     * Get information about a specific product running\n\t     * @param  {String} accessCode Access code for product run\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProductInfo',\n\t    value: function () {\n\t      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(accessCode) {\n\t        var headers, response, json;\n\t        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n\t          while (1) {\n\t            switch (_context10.prev = _context10.next) {\n\t              case 0:\n\t                headers = {\n\t                  'Content-Type': 'application/json',\n\t                  'X-123test-ApiKey': this.api.apiKey\n\t                };\n\t                _context10.next = 3;\n\t                return (0, _request2['default'])(this.api.endpoint + '/product/' + accessCode + '/overview', {\n\t                  method: 'GET',\n\t                  mode: 'cors',\n\t                  headers: headers\n\t                });\n\t\n\t              case 3:\n\t                response = _context10.sent;\n\t                _context10.next = 6;\n\t                return response.json();\n\t\n\t              case 6:\n\t                json = _context10.sent;\n\t                return _context10.abrupt('return', {\n\t                  slots: json.slots,\n\t                  reports: json.reports,\n\t                  product_access_code: json.product_access_code\n\t                });\n\t\n\t              case 8:\n\t              case 'end':\n\t                return _context10.stop();\n\t            }\n\t          }\n\t        }, _callee10, this);\n\t      }));\n\t\n\t      function requestProductInfo(_x19) {\n\t        return _ref18.apply(this, arguments);\n\t      }\n\t\n\t      return requestProductInfo;\n\t    }()\n\t\n\t    /**\n\t     * (Async) Request an instrument from the api\n\t     *\n\t     * Promise returns body and resources that need to be loaded\n\t     * @param  {String} accessCode Access code for the instrument\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestInstrument',\n\t    value: function () {\n\t      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(accessCode) {\n\t        var response, body;\n\t        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n\t          while (1) {\n\t            switch (_context11.prev = _context11.next) {\n\t              case 0:\n\t                _context11.next = 2;\n\t                return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t                  method: 'GET',\n\t                  cache: 'no-cache',\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey,\n\t                    'X-123test-InstrumentRun': accessCode\n\t                  }\n\t                });\n\t\n\t              case 2:\n\t                response = _context11.sent;\n\t                _context11.next = 5;\n\t                return response.text();\n\t\n\t              case 5:\n\t                body = _context11.sent;\n\t                return _context11.abrupt('return', {\n\t                  body: body,\n\t                  status: response.headers.get('X-123test-InstrumentStatus'),\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 7:\n\t              case 'end':\n\t                return _context11.stop();\n\t            }\n\t          }\n\t        }, _callee11, this);\n\t      }));\n\t\n\t      function requestInstrument(_x20) {\n\t        return _ref19.apply(this, arguments);\n\t      }\n\t\n\t      return requestInstrument;\n\t    }()\n\t\n\t    /**\n\t     * Attach a listener to the instrument, makes use of a promise that resolves\n\t     * when the button is clicked.\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'waitForInstrumentToSubmit',\n\t    value: function waitForInstrumentToSubmit() {\n\t      var className = 'its123-disabled-loading';\n\t      var loadingIcon = '<div class=\"its123-loading-spinner\"><div></div><div></div><div></div></div>';\n\t      var form = document.querySelector(this.api.elements.instrumentFormSelector);\n\t      var button = form.querySelector('button[type=submit]');\n\t\n\t      // Re-enable button if it was previously disabled by this function\n\t      if (button.classList.contains(className)) {\n\t        button.disabled = false;\n\t        button.innerHTML = button.getAttribute('data-label') ? button.getAttribute('data-label') : button.innerText;\n\t        button.classList.remove(className);\n\t      }\n\t\n\t      // Return a new promise that resolves when the submit button is clicked\n\t      return new Promise(function (resolve) {\n\t        form.addEventListener('submit', function (event) {\n\t          event.preventDefault();\n\t\n\t          // Disable submit button and add class so that we know that\n\t          // the api js disabled the button (and not individual instrument js)\n\t          button.disabled = true;\n\t          button.classList.add(className);\n\t          // Save content to an attribute to reset it later\n\t          if (!button.getAttribute('data-label')) {\n\t            button.setAttribute('data-label', button.innerText);\n\t          }\n\t          button.innerHTML = loadingIcon;\n\t\n\t          resolve({ form: form, event: event });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Submit a form to the API for a given instrument\n\t     * @param  {String} accessCode Access code of the instrument\n\t     * @param  {Object} form       HTML Form\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'submitInstrumentData',\n\t    value: function () {\n\t      var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(accessCode, form) {\n\t        var response, body;\n\t        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n\t          while (1) {\n\t            switch (_context12.prev = _context12.next) {\n\t              case 0:\n\t                this.triggerEvent('instrument-submitting', accessCode);\n\t\n\t                _context12.next = 3;\n\t                return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t                  method: 'POST',\n\t                  cache: 'no-cache',\n\t                  body: new FormData(form),\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey,\n\t                    'X-123test-InstrumentRun': accessCode\n\t                  }\n\t                });\n\t\n\t              case 3:\n\t                response = _context12.sent;\n\t                _context12.next = 6;\n\t                return response.text();\n\t\n\t              case 6:\n\t                body = _context12.sent;\n\t                return _context12.abrupt('return', {\n\t                  body: body,\n\t                  status: response.headers.get('X-123test-InstrumentStatus'),\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 8:\n\t              case 'end':\n\t                return _context12.stop();\n\t            }\n\t          }\n\t        }, _callee12, this);\n\t      }));\n\t\n\t      function submitInstrumentData(_x21, _x22) {\n\t        return _ref20.apply(this, arguments);\n\t      }\n\t\n\t      return submitInstrumentData;\n\t    }()\n\t\n\t    /**\n\t     * Output an instrument to the DOM\n\t     * @param  {String} body Instrument HTML\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderInstrument',\n\t    value: function renderInstrument(body) {\n\t      this.api.elements.productElement.innerHTML = body;\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.productElement.style.display = 'block';\n\t      this.api.elements.reportElement.style.display = 'none';\n\t    }\n\t\n\t    /**\n\t     * Add event listeners to radio buttons in instruments\n\t     * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'bindInstrumentStorageListeners',\n\t    value: function bindInstrumentStorageListeners(prefix) {\n\t      var _this4 = this;\n\t\n\t      if (!this.api.storageEnabled) {\n\t        return;\n\t      }\n\t\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var _loop2 = function _loop2(e) {\n\t        var input = elements[e];\n\t\n\t        if (input.type === 'radio') {\n\t          // Sync store with current value of the input element\n\t          if (input.checked) {\n\t            _this4.store.set(prefix + '-' + input.name, input.value);\n\t          }\n\t          input.addEventListener('change', function () {\n\t            _this4.store.set(prefix + '-' + input.name, input.value);\n\t          });\n\t        }\n\t      };\n\t\n\t      for (var e = 0; e < elements.length; e += 1) {\n\t        _loop2(e);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Apply stored instrument state to the DOM\n\t     * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadInstrumentStateFromStorage',\n\t    value: function loadInstrumentStateFromStorage(prefix) {\n\t      if (!this.api.storageEnabled) {\n\t        return;\n\t      }\n\t\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var loaded = false;\n\t      for (var e = 0; e < elements.length; e += 1) {\n\t        var _input = elements[e];\n\t        var value = this.store.get(prefix + '-' + _input.name);\n\t\n\t        if (value !== null && _input.type === 'radio' && _input.value === value) {\n\t          _input.checked = true;\n\t          loaded = true;\n\t        }\n\t      }\n\t\n\t      if (loaded) {\n\t        this.triggerEvent('instrument-item-data-loaded', prefix);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Render a report to the DOM\n\t     *\n\t     * @param  {String} body report body\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderReport',\n\t    value: function renderReport(body) {\n\t      this.api.elements.productElement.style.display = 'none';\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.reportElement.innerHTML = body;\n\t      this.api.elements.reportElement.style.display = 'block';\n\t    }\n\t\n\t    /**\n\t     * Add new resources to the DOM\n\t     *\n\t     * Returns a new Promise that resolves when all critical assets have been loaded\n\t     * @param  {Object} resources The resources to load\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'runResourceFunctions',\n\t\n\t\n\t    /**\n\t     * Run functions for a list of JS resources\n\t     * @param  {Object} resources\n\t     * @return {void}\n\t     */\n\t    value: function runResourceFunctions(resources) {\n\t      var _this5 = this;\n\t\n\t      Object.keys(resources).forEach(function (key) {\n\t        var resource = resources[key];\n\t        if (resource.type === 'js' && typeof window.its123[resource.func] === 'function') {\n\t          // Give context as variable\n\t          window.its123[resource.func](_this5.api, _this5);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Request a report by its access code\n\t     * @param  {String} accessCode access code for the report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestReport',\n\t    value: function () {\n\t      var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(accessCode) {\n\t        var _ref22 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref22$metaData = _ref22.metaData,\n\t            metaData = _ref22$metaData === undefined ? '' : _ref22$metaData,\n\t            _ref22$metaHmac = _ref22.metaHmac,\n\t            metaHmac = _ref22$metaHmac === undefined ? '' : _ref22$metaHmac;\n\t\n\t        var url, response, body;\n\t        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n\t          while (1) {\n\t            switch (_context13.prev = _context13.next) {\n\t              case 0:\n\t                url = void 0;\n\t\n\t                if (metaData.length <= 0 || metaHmac.length <= 0) {\n\t                  url = this.api.endpoint + '/report/' + accessCode;\n\t                } else {\n\t                  url = this.api.endpoint + '/report/' + accessCode + '?meta=' + metaData + '&meta_hmac=' + metaHmac;\n\t                }\n\t\n\t                _context13.next = 4;\n\t                return (0, _request2['default'])(url, {\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey\n\t                  },\n\t                  method: 'GET',\n\t                  mode: 'cors'\n\t                });\n\t\n\t              case 4:\n\t                response = _context13.sent;\n\t                _context13.next = 7;\n\t                return response.text();\n\t\n\t              case 7:\n\t                body = _context13.sent;\n\t                return _context13.abrupt('return', {\n\t                  body: body,\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 9:\n\t              case 'end':\n\t                return _context13.stop();\n\t            }\n\t          }\n\t        }, _callee13, this);\n\t      }));\n\t\n\t      function requestReport(_x23) {\n\t        return _ref21.apply(this, arguments);\n\t      }\n\t\n\t      return requestReport;\n\t    }()\n\t\n\t    /**\n\t     * Log an exception and retrow\n\t     * @param  {String} id Error id\n\t     * @param  {Object} e The error\n\t     * @param {Object} param Invoked parameter data\n\t     * @return null\n\t     */\n\t\n\t  }, {\n\t    key: 'handleException',\n\t    value: function () {\n\t      var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(id, e) {\n\t        var param = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n\t          while (1) {\n\t            switch (_context14.prev = _context14.next) {\n\t              case 0:\n\t                _context14.t0 = e.status;\n\t                _context14.next = _context14.t0 === 401 ? 3 : _context14.t0 === 403 ? 3 : _context14.t0 === 404 ? 6 : _context14.t0 === 408 ? 8 : _context14.t0 === 503 ? 8 : _context14.t0 === 500 ? 11 : 13;\n\t                break;\n\t\n\t              case 3:\n\t                this.log('error', '123test API Permission error: ' + e.message + ' (' + e.status + ')');\n\t                this.triggerEvent('api-permission', { status: 403, message: location.hostname + ' ' + this.api.apiKey + ' ' + this.api.productId }, 'error');\n\t                return _context14.abrupt('return');\n\t\n\t              case 6:\n\t                this.log('error', '123test API Product error: ' + e.message + ' (' + e.status + ')');\n\t                return _context14.abrupt('break', 14);\n\t\n\t              case 8:\n\t                this.log('error', '123test API Server error: API is unavailable');\n\t                this.triggerEvent('api-unavailable', e, 'error');\n\t                return _context14.abrupt('return');\n\t\n\t              case 11:\n\t                this.log('error', '123test API Server error: ' + e.message + ' (' + e.status + ')');\n\t                return _context14.abrupt('break', 14);\n\t\n\t              case 13:\n\t                return _context14.abrupt('break', 14);\n\t\n\t              case 14:\n\t\n\t                // Trigger that a unhandled exception has occurred\n\t                this.log('error', '123test API Server error: Error Unknown, ' + param);\n\t                this.triggerEvent('api-unavailable', e, 'error');\n\t\n\t              case 16:\n\t              case 'end':\n\t                return _context14.stop();\n\t            }\n\t          }\n\t        }, _callee14, this);\n\t      }));\n\t\n\t      function handleException(_x25, _x26) {\n\t        return _ref23.apply(this, arguments);\n\t      }\n\t\n\t      return handleException;\n\t    }()\n\t\n\t    /**\n\t     * Utility function to get the url to a PDF report for a given product object\n\t     * @param  {Object} product               The product that contains the report list\n\t     * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n\t     * @return {String}                       Url to the report\n\t     */\n\t\n\t  }, {\n\t    key: 'getPdfUrl',\n\t    value: function getPdfUrl(product) {\n\t      var typeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'standard';\n\t\n\t      // Get correct type id for premium or standard pdf\n\t      var type = typeName === 'premium' ? 221 : 121;\n\t      var report = product.reports.find(function (r) {\n\t        return r.type === type;\n\t      });\n\t\n\t      if (!report) {\n\t        throw new Error('No access code for pdf is present in product object.');\n\t      }\n\t\n\t      return this.api.endpoint + '/report/' + report.access_code;\n\t    }\n\t\n\t    /**\n\t     * Send a new event to the listeners\n\t     * @param  {String} eventName Name of the event\n\t     * @param  {Object} data      Optional event data\n\t     * @param  {String} type      Event type\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'triggerEvent',\n\t    value: function triggerEvent(eventName, data) {\n\t      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'info';\n\t\n\t      var listeners = this.eventListeners[eventName];\n\t\n\t      if (listeners && listeners.length > 0) {\n\t        listeners.forEach(function (l) {\n\t          return l(data);\n\t        });\n\t      }\n\t\n\t      this.log(type, 'Event triggered: ' + eventName);\n\t    }\n\t\n\t    /**\n\t     * Ouputs a message to the console based on the log logLevel\n\t     * @param  {String} type    Type of the message\n\t     * @param  {String} message The message itself\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'log',\n\t    value: function log(type, message) {\n\t      switch (type) {\n\t        case 'error':\n\t          if (this.api.logLevel !== 'none') {\n\t            console.error(message);\n\t          }\n\t          break;\n\t\n\t        case 'info':\n\t        default:\n\t          if (this.api.logLevel !== 'error' || this.api.logLevel !== 'none') {\n\t            console.info(message);\n\t          }\n\t          break;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Register a new event listener\n\t     * @param  {String|Array}   eventName Name of the event\n\t     * @param  {Function} callback\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(eventName, callback) {\n\t      var _this6 = this;\n\t\n\t      var events = [];\n\t\n\t      if (Array.isArray(eventName)) {\n\t        events = eventName;\n\t      } else {\n\t        events.push(eventName);\n\t      }\n\t\n\t      events.forEach(function (event) {\n\t        if (!_this6.eventListeners[event]) {\n\t          _this6.eventListeners[event] = [];\n\t        }\n\t\n\t        _this6.eventListeners[event].push(callback);\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'loadResources',\n\t    value: function loadResources(resources) {\n\t      if (!resources) {\n\t        return null;\n\t      }\n\t\n\t      // Map each resource to a new Promise\n\t      // JS resources resolve when loaded\n\t      return Promise.all(Object.keys(resources).map(function (key) {\n\t        return new Promise(function (resolve, reject) {\n\t          var resourceItem = resources[key];\n\t          var head = document.getElementsByTagName('head')[0];\n\t\n\t          // Do not load resources that are already present\n\t          if (document.querySelectorAll('script[src=\"' + resourceItem.path + '\"]').length > 0) {\n\t            resolve();\n\t            return;\n\t          }\n\t          switch (resourceItem.type) {\n\t            case 'js':\n\t              {\n\t                var script = document.createElement('script');\n\t                script.src = resourceItem.path;\n\t                // Allow some files to not load asynchronous\n\t                script.async = resourceItem.async || false;\n\t                // Resolve when loaded\n\t                script.onload = resolve;\n\t                // Append to the head of the page\n\t                head.appendChild(script);\n\t              }\n\t              break;\n\t            case 'css':\n\t              {\n\t                var cssLink = document.createElement('link');\n\t                cssLink.rel = 'stylesheet';\n\t                cssLink.type = 'text/css';\n\t                cssLink.media = 'all';\n\t                cssLink.href = resourceItem.path;\n\t                // Append to the head of the page\n\t                head.appendChild(cssLink);\n\t\n\t                // Directy resolve css, not critical\n\t                resolve();\n\t              }\n\t              break;\n\t            default:\n\t              reject('Unknown resource type ' + resourceItem.type);\n\t          }\n\t        });\n\t      }));\n\t    }\n\t  }]);\n\t\n\t  return Its123;\n\t}();\n\t\n\texports['default'] = Its123;\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports['default'] = request;\n\t\n\tvar _promise = __webpack_require__(15);\n\t\n\t/**\n\t * Checks if a network request came back fine, and throws an error if not\n\t *\n\t * @param  {object} response   A response from a network request\n\t *\n\t * @return {object|undefined} Returns either the response, or throws an error\n\t */\n\tfunction checkStatus(response) {\n\t  if (response.status >= 200 && response.status < 300) {\n\t    return response;\n\t  }\n\t\n\t  var error = new Error(response.statusText);\n\t  error.response = response;\n\t  error.status = response.status;\n\t\n\t  throw error;\n\t}\n\t\n\t/**\n\t * Requests a URL, returning a promise\n\t *\n\t * @param  {string} url       The URL we want to request\n\t * @param  {object} [options] The options we want to pass to \"fetch\"\n\t * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n\t * @return {object}           The response data\n\t */\n\tfunction request(url) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8000;\n\t\n\t  return (0, _promise.timeoutPromise)(timeout, fetch(url, options).then(checkStatus));\n\t}\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Utility wrapper around localStorage.\n\t *\n\t * Adds convenience functions to save and retrieve items\n\t * from the local storage store.\n\t */\n\tvar ClientStorage = function () {\n\t  function ClientStorage() {\n\t    var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'its123';\n\t\n\t    _classCallCheck(this, ClientStorage);\n\t\n\t    this.store = window.localStorage;\n\t    this.storeEnabled = enabled;\n\t    this.prefix = prefix;\n\t\n\t    if (this.storeEnabled) {\n\t      // Test availability of local storage\n\t      var testItem = 'test';\n\t      try {\n\t        this.store.setItem(testItem, testItem);\n\t        this.store.removeItem(testItem);\n\t        this.storeEnabled = true;\n\t      } catch (e) {\n\t        this.storeEnabled = false;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Store a product in the local storage\n\t   * @param  {String} productId Id of the product\n\t   * @param  {object} product   Product information\n\t   * @param  {String} user      User UUID\n\t   * @return {void}\n\t   */\n\t\n\t\n\t  _createClass(ClientStorage, [{\n\t    key: 'saveProduct',\n\t    value: function saveProduct(productId, product, user) {\n\t      // Add new record\n\t      var productData = _extends({}, product, {\n\t        user: user,\n\t        started: Date.now()\n\t      });\n\t\n\t      this.set(productId, JSON.stringify(productData));\n\t    }\n\t\n\t    /**\n\t     * Load a product from the storage\n\t     *\n\t     * @param  {String} productId             Product id\n\t     * @param  {String} [user='']             User UUID\n\t     * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n\t     * @return {null|Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadProduct',\n\t    value: function loadProduct(productId) {\n\t      var user = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t      var expirationTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3600;\n\t\n\t      var item = this.get(productId);\n\t\n\t      // Check presence of object\n\t      if (!item) {\n\t        return null;\n\t      }\n\t\n\t      var product = JSON.parse(item);\n\t\n\t      if (product && product.started + expirationTime * 1000 > Date.now() && product.user === user) {\n\t        return product;\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Set the current state of an instrument in storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @param  {String} status     Status indicator\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'saveInstrumentStatus',\n\t    value: function saveInstrumentStatus(accessCode, status) {\n\t      this.set(accessCode, status);\n\t    }\n\t\n\t    /**\n\t     * Get status of an instrument from storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @return {String|null} Status\n\t     */\n\t\n\t  }, {\n\t    key: 'loadInstrumentStatus',\n\t    value: function loadInstrumentStatus(accessCode) {\n\t      return this.get(accessCode);\n\t    }\n\t\n\t    /**\n\t     * Save an item to storage\n\t     * @param  {String} id   identifier\n\t     * @param  {mixed} item Value to store\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'set',\n\t    value: function set(id, item) {\n\t      if (!this.storeEnabled) {\n\t        return;\n\t      }\n\t\n\t      this.store.setItem(this.prefix + '-' + id, item);\n\t    }\n\t\n\t    /**\n\t     * Retrieve an item from storage\n\t     * @param  {String} id Storage identifier\n\t     * @return {mixed}    The value\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get(id) {\n\t      if (!this.storeEnabled) {\n\t        return null;\n\t      }\n\t\n\t      return this.store.getItem(this.prefix + '-' + id);\n\t    }\n\t\n\t    /**\n\t     * Remove item from storage\n\t     * @param  {String} id Storage identifier\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(id) {\n\t      if (!this.storeEnabled) {\n\t        return;\n\t      }\n\t\n\t      this.store.removeItem(this.prefix + '-' + id);\n\t    }\n\t\n\t    /**\n\t     * Remove all local storage elements that start with a given prefix\n\t     * @param  {String} prefix Prefix to search for\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'removeByPrefix',\n\t    value: function removeByPrefix(prefix) {\n\t      if (!this.storeEnabled) {\n\t        return;\n\t      }\n\t\n\t      for (var i = this.store.length - 1; i >= 0; i -= 1) {\n\t        if (this.store.key(i).startsWith(this.prefix + '-' + prefix)) {\n\t          this.store.removeItem(this.store.key(i));\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Clear the local storage of all items associated with a product id\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearProduct',\n\t    value: function clearProduct(productId) {\n\t      var _this = this;\n\t\n\t      var productJson = this.get(productId);\n\t\n\t      if (!productJson) {\n\t        return;\n\t      }\n\t\n\t      var product = JSON.parse(productJson);\n\t      product.slots.instruments.forEach(function (i) {\n\t        _this.remove(i.access_code);\n\t        _this.removeByPrefix(i.access_code);\n\t      });\n\t      this.remove(productId);\n\t    }\n\t  }]);\n\t\n\t  return ClientStorage;\n\t}();\n\t\n\texports['default'] = ClientStorage;\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var Op = Object.prototype;\n\t  var hasOwn = Op.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  // This is a polyfill for %IteratorPrototype% for environments that\n\t  // don't natively support it.\n\t  var IteratorPrototype = {};\n\t  IteratorPrototype[iteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t\n\t  var getProto = Object.getPrototypeOf;\n\t  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\t  if (NativeIteratorPrototype &&\n\t      NativeIteratorPrototype !== Op &&\n\t      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t    // This environment has a native %IteratorPrototype%; use it instead\n\t    // of the polyfill.\n\t    IteratorPrototype = NativeIteratorPrototype;\n\t  }\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype =\n\t    Generator.prototype = Object.create(IteratorPrototype);\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] =\n\t    GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\t\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\t\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\t\n\t    if (typeof global.process === \"object\" && global.process.domain) {\n\t      invoke = global.process.domain.bind(invoke);\n\t    }\n\t\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t  runtime.AsyncIterator = AsyncIterator;\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      context.method = method;\n\t      context.arg = arg;\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          var delegateResult = maybeInvokeDelegate(delegate, context);\n\t          if (delegateResult) {\n\t            if (delegateResult === ContinueSentinel) continue;\n\t            return delegateResult;\n\t          }\n\t        }\n\t\n\t        if (context.method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = context.arg;\n\t\n\t        } else if (context.method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw context.arg;\n\t          }\n\t\n\t          context.dispatchException(context.arg);\n\t\n\t        } else if (context.method === \"return\") {\n\t          context.abrupt(\"return\", context.arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            continue;\n\t          }\n\t\n\t          return {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(context.arg) call above.\n\t          context.method = \"throw\";\n\t          context.arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Call delegate.iterator[context.method](context.arg) and handle the\n\t  // result, either by returning a { value, done } result from the\n\t  // delegate iterator, or by modifying context.method and context.arg,\n\t  // setting context.delegate to null, and returning the ContinueSentinel.\n\t  function maybeInvokeDelegate(delegate, context) {\n\t    var method = delegate.iterator[context.method];\n\t    if (method === undefined) {\n\t      // A .throw or .return when the delegate iterator has no .throw\n\t      // method always terminates the yield* loop.\n\t      context.delegate = null;\n\t\n\t      if (context.method === \"throw\") {\n\t        if (delegate.iterator.return) {\n\t          // If the delegate iterator has a return method, give it a\n\t          // chance to clean up.\n\t          context.method = \"return\";\n\t          context.arg = undefined;\n\t          maybeInvokeDelegate(delegate, context);\n\t\n\t          if (context.method === \"throw\") {\n\t            // If maybeInvokeDelegate(context) changed context.method from\n\t            // \"return\" to \"throw\", let that override the TypeError below.\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\t\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\n\t          \"The iterator does not provide a 'throw' method\");\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    }\n\t\n\t    var record = tryCatch(method, delegate.iterator, context.arg);\n\t\n\t    if (record.type === \"throw\") {\n\t      context.method = \"throw\";\n\t      context.arg = record.arg;\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\t\n\t    var info = record.arg;\n\t\n\t    if (! info) {\n\t      context.method = \"throw\";\n\t      context.arg = new TypeError(\"iterator result is not an object\");\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\t\n\t    if (info.done) {\n\t      // Assign the result of the finished delegate to the temporary\n\t      // variable specified by delegate.resultName (see delegateYield).\n\t      context[delegate.resultName] = info.value;\n\t\n\t      // Resume execution at the desired location (see delegateYield).\n\t      context.next = delegate.nextLoc;\n\t\n\t      // If context.method was \"throw\" but the delegate handled the\n\t      // exception, let the outer generator proceed normally. If\n\t      // context.method was \"next\", forget context.arg since it has been\n\t      // \"consumed\" by the delegate iterator. If context.method was\n\t      // \"return\", allow the original .return call to continue in the\n\t      // outer generator.\n\t      if (context.method !== \"return\") {\n\t        context.method = \"next\";\n\t        context.arg = undefined;\n\t      }\n\t\n\t    } else {\n\t      // Re-yield the result returned by the delegate method.\n\t      return info;\n\t    }\n\t\n\t    // The delegate iterator is finished, so forget it and continue with\n\t    // the outer generator.\n\t    context.delegate = null;\n\t    return ContinueSentinel;\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\t\n\t  // A Generator should always return itself as the iterator object when the\n\t  // @@iterator function is called on it. Some browsers' implementations of the\n\t  // iterator prototype chain incorrectly implement this, causing the Generator\n\t  // object to not be returned from this call. This ensures that doesn't happen.\n\t  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.method = \"next\";\n\t      this.arg = undefined;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t\n\t        if (caught) {\n\t          // If the dispatched exception was caught by a catch block,\n\t          // then let that catch block handle the exception normally.\n\t          context.method = \"next\";\n\t          context.arg = undefined;\n\t        }\n\t\n\t        return !! caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.method = \"next\";\n\t        this.next = finallyEntry.finallyLoc;\n\t        return ContinueSentinel;\n\t      }\n\t\n\t      return this.complete(record);\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = this.arg = record.arg;\n\t        this.method = \"return\";\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      if (this.method === \"next\") {\n\t        // Deliberately forget the last sent value so that we don't\n\t        // accidentally pass it on to the delegate.\n\t        this.arg = undefined;\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// its123api.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 430b2b95333818c8cd23","import Its123 from './Api/Its123';\n\n// Bind Its123 to the global window\nwindow.Its123 = Its123;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\n * Promise with timeout function\n * @param  {Number} ms      Miliseconds to wait before promise is rejected\n * @param  {Promise} promise The promise to run\n * @return {Promise}         Promise with timeout\n */\nexport function timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    // Create timer that rejects promise after ms miliseconds\n    const timeoutId = setTimeout(() => {\n      const error = new Error('timeout');\n      error.status = 408;\n      reject(error);\n    }, ms);\n\n    // Clear timeout if promise resolves/rejects on its own\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      },\n    );\n  });\n}\n\n/**\n * Decorates a promis-creating function with a retry functionality (by recursion)\n * @param  {Number}   maxRetries  Max number of retries\n * @param  {Number}   timeout     Miliseconds to wait\n * @param  {Function} fn          Function that creates and returns a promise\n * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n * @param  {Number}   [current=0] Current iteration in the retry loop\n * @return {Promise}\n */\nexport function tryAtMost(maxRetries, timeout, fn, timeoutFactor = 4, current = 0) {\n  return new Promise((resolve, reject) => fn()\n    .then(resolve)\n    .catch((error) => {\n      if (current < maxRetries) {\n        setTimeout(() =>\n          resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1)),\n          timeout,\n        );\n      } else {\n        reject(error);\n      }\n    }),\n  );\n}\n\nexport function retryUntilResolved(fn) {\n  return new Promise(resolve => fn()\n    .then(resolve)\n    .catch(() => resolve(retryUntilResolved(fn))),\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/promise.js","/*\n * 123Test Api v2\n *\n * @author Wouter Bulten <github.com/wouterbulten>\n * @author Theo den Hollander <github.com/theodenhollander>\n * @license\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 123test\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport 'regenerator-runtime/runtime';\n\nimport request from '../util/request';\n\nimport { tryAtMost } from '../util/promise';\n\nimport ClientStorage from '../util/storage';\n\n/**\n * Default configuration for api, can be overriden by user\n * @type {Object}\n */\nconst defaultApiConfig = {\n  // Domain config\n  domain: 'https://api.123test.com',\n  version: 'v2',\n\n  // Environment config\n  logLevel: 'all', // One of: all, info, error, none\n\n  // DOM config\n  elements: {\n    // Selector used to bind events to instrument forms, we advise\n    // not to alter this selector.\n    instrumentFormSelector: 'form.its123-instrument',\n    // ID for the loading div\n    loadingElementId: 'its123api-loading',\n    // ID for the instrument/product div\n    productElementId: 'its123api-product',\n    // ID for the report div\n    reportElementId: 'its123api-report',\n\n    // Internal placeholders for the DOM elements, do not set these to any values\n    loadingElement: null,\n    productElement: null,\n    reportElement: null,\n  },\n\n  // Number of retries some fetch request may make\n  maxHttpRetries: 2,\n  // Initial delay before a retry\n  retryDelay: 8000,\n  // Number of times a user can try to resubmit a form\n  maxSubmitRetries: 10,\n\n  // Whether to use localStorage for caching\n  storageEnabled: true,\n  storagePrefix: 'its123Api',\n\n  // Public api key used for every request\n  apiKey: 'not-set',\n\n  // loaded product ID\n  productId: 'not-set',\n};\n\n/**\n * Main API class\n */\nclass Its123 {\n\n  /**\n   * Create new Api object\n   * @param  {Object} [apiConfig={}] Api configuration\n   * @return {void}\n   */\n  constructor(apiConfig = {}) {\n    // Set api config to default and override with parameters\n    this.api = {\n      ...defaultApiConfig,\n      ...apiConfig,\n    };\n    // Construct correct api end point\n    this.api.endpoint = `${this.api.domain}/${this.api.version}`;\n\n    // Check for valid api key\n    if (this.api.apiKey === 'not-set') {\n      throw new Error(\n        'Api key must be set when initalising Its123 object. Please check your api config.',\n      );\n    }\n\n    // Query the DOM and set options\n    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n    if (!this.api.elements.loadingElement\n      || !this.api.elements.productElement || !this.api.elements.reportElement) {\n      throw new Error(\n        'Element for loading, product or report not found. Please check your HTML and Api config.',\n      );\n    }\n\n    // Placeholder for eventlisteners\n    this.eventListeners = {};\n\n    // Create new storage object for localStorage functionality\n    this.store = new ClientStorage(this.api.storageEnabled, this.api.storagePrefix);\n  }\n\n  /**\n   * Wrapper around loadAndRunProduct with error handling\n   *\n   * @param  {String} productId product to load\n   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n   * @return {Promise}\n   * @see loadAndRunProduct()\n   */\n  async loadProduct(productId, { renderReport = true, user = '' } = {}) {\n    try {\n      this.api.productId = productId;\n      return await this.loadAndRunProduct(productId, { renderReport, user });\n    } catch (error) {\n      // Something could be wrong with our local store,\n      // clear it to prevent any future errors\n      this.store.clearProduct(productId);\n      this.handleException('loadProduct', error, { productId, renderReport, user });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Start a product run given an prefetched insrument\n   * @param  {String} productId product to load\n   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n   * @return {Promise}\n   * @see loadAndRunProduct()\n   */\n  async prefetchProduct(productId, { renderReport = true, user = '' } = {}) {\n    // First check for existing run in storage\n    const product = this.store.loadProduct(productId, user);\n\n    if (product) {\n      // Revert to non-prefetch call if the user has data in local storage\n      return this.loadProduct(productId, { renderReport, user });\n    }\n\n    try {\n      // Enable localstorage support for anonymous instruments\n      // Use the product key as the id to prevent loading data from other products\n      this.loadInstrumentStateFromStorage(`st-${productId}`);\n      this.bindInstrumentStorageListeners(`st-${productId}`);\n\n      // Wait for prefetched instrument to submit\n      const form = await this.waitForInstrumentToSubmit();\n\n      // Clear local storage from temporary instrument data\n      this.store.removeByPrefix(`st-${productId}`);\n\n      return this.loadAndRunProduct(productId, { renderReport, user }, form);\n    } catch (error) {\n      // Something could be wrong with our local store,\n      // clear it to prevent any future errors\n      this.store.clearProduct(productId);\n\n      throw error;\n    }\n  }\n\n  /**\n   * Restarts a product by clearing any local data\n   *\n   * @param  {String} productId product to load\n   * @param  {Object} [config={}] Product configuration, see loadAndRunProduct\n   * @return {Promise}\n   * @see loadAndRunProduct()\n   */\n  async restartProduct(productId, { renderReport = true, user = '' } = {}) {\n    this.store.clearProduct(productId);\n    return this.loadProduct(productId, { renderReport, user });\n  }\n\n  /**\n   * Load and run a product\n   *\n   * Runs all the required sub steps from instrument to report. All promises are chained\n   * and the final promise returns the product data when resolved.\n   *\n   * Will automatically render the first report that is available. Set `renderReport` to false\n   * to counter this behaviour.\n   *\n   * Data structure of the product object:\n   *\n   * product = {\n   *  slots: {\n   *    instruments: [],\n   *    respondent: {},\n   *  },\n   *  reports: [],\n   *  access_code: null,\n   * };\n   *\n   * @param  {String} productId product to load\n   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n   *                                       report render functions\n   * @param  {String}  [user=''] Optional user UUID\n   * @return {Promise}\n   */\n  async loadAndRunProduct(productId, { renderReport = true, user = '' } = {}, prefetchedForm = null) {\n    let product = null;\n\n    // Show loading div (only when not in prefetch mode)\n    if (!prefetchedForm) {\n      this.api.elements.productElement.style.display = 'none';\n      this.api.elements.loadingElement.style.display = 'block';\n    }\n\n    // Try to load product information from local storage, if it fails\n    // fall back to a API request\n    product = this.store.loadProduct(productId, user);\n\n    if (!product) {\n      product = await this.requestProduct(productId, user);\n\n      // Store the requested product in the local store for future requests\n      this.store.saveProduct(productId, product, user);\n    }\n    this.triggerEvent('product-loaded', product);\n    let instruments = product.slots.instruments;\n    this.triggerEvent('instruments-loaded', instruments);\n\n    // Filter any instruments that already have been completed\n    // Prevents unnecessary requests to the API\n    instruments = instruments.filter((i) => {\n      const status = this.store.loadInstrumentStatus(i.access_code);\n\n      switch (status) {\n        case 'ended-items':\n        case 'ended-skipped':\n        case 'ended-time':\n          this.triggerEvent('instrument-already-completed',\n            { accessCode: i.access_code, status });\n          return false;\n        case 'in-progress':\n          this.triggerEvent('instrument-continue',\n            { accessCode: i.access_code, status });\n          return true;\n        case 'started':\n        default:\n          return true;\n      }\n    });\n\n    for (let i = 0; i < instruments.length; i += 1) {\n      const accessCode = instruments[i].access_code;\n\n      let result;\n      if (i === 0 && prefetchedForm) {\n        // Skip requesting the instrument when it is the first and a prefetched\n        // form is on the page.\n        this.triggerEvent('instrument-prefetched', {});\n        result = { status: 'prefetched', form: prefetchedForm };\n      } else {\n        result = await this.requestInstrument(accessCode);\n        this.triggerEvent('instrument-started', { accessCode, status: result.status });\n      }\n\n      await this.processApiInstrumentResponse(accessCode, result);\n    }\n\n\n    if (renderReport) {\n      // All instruments have been completed, render report\n      const { body, resources } = await this.requestReport(product.reports[0].access_code);\n      await Its123.loadResources(resources);\n      this.renderReport(body);\n      this.runResourceFunctions(resources);\n      this.triggerEvent('report-ready');\n    }\n\n    // Remove this session from the local storage\n    this.store.clearProduct(productId);\n    // Trigger event and pass product info\n    this.triggerEvent('product-completed', product);\n\n    return product;\n  }\n\n  /**\n   * Load an render a report by its access code\n   * @param  {String} accessCode Access code for report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  async loadReport(accessCode, { metaData, metaHmac } = {}) {\n    try {\n      const { body, resources } =\n        await tryAtMost(this.api.maxHttpRetries, this.api.retryDelay, () =>\n          this.requestReport(accessCode, { metaData, metaHmac }),\n      );\n      await Its123.loadResources(resources);\n      this.renderReport(body);\n      this.runResourceFunctions(resources);\n      this.triggerEvent('report-ready');\n    } catch (error) {\n      this.handleException('loadReport', error, { accessCode, metaData, metaHmac });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Process a single API response from an instrument call\n   *\n   * When the instrument is still running the function will return a new Promise\n   * that waits for a form submit.\n   *\n   * @param  {String} accessCode Access code for this instrument\n   * @param  {String} status     Current instrument status\n   * @param  {Array} resources  Resources to load\n   * @param  {String} body       Html to put in the DOM\n   * @param  {Object} form      (Optional) submitted form+event object for prefetch requests\n   * @return {Promise}\n   */\n  async processApiInstrumentResponse(accessCode, { status, resources, body, form = null }) {\n    switch (status) {\n      case 'prefetched':\n        if (!form) {\n          throw new Error('Cannot handle prefetch state without existing instrument form');\n        }\n        // Run function again until instrument has ended with data from form\n        return await this.processApiInstrumentResponse(accessCode,\n          await this.processFormSubmit(accessCode, form),\n        );\n      case 'started':\n      case 'in-progress':\n        this.store.saveInstrumentStatus(accessCode, status);\n\n        // Wait for resources to load\n        await Its123.loadResources(resources);\n\n        this.renderInstrument(body);\n\n        // Try to load item data from local storage\n        this.loadInstrumentStateFromStorage(accessCode);\n        this.bindInstrumentStorageListeners(accessCode);\n\n        this.runResourceFunctions(resources);\n        this.triggerEvent('instrument-submitted');\n        // Run function again until instrument has ended\n        return await this.processApiInstrumentResponse(accessCode,\n          await this.processFormSubmit(accessCode),\n        );\n      case 'ended-items':\n      case 'ended-skipped':\n      case 'ended-time':\n        this.store.saveInstrumentStatus(accessCode, status);\n        this.triggerEvent('instrument-completed', { accessCode, status });\n        break;\n      default:\n        throw new Error(`Unexpected instrument status ${status}`);\n    }\n\n    return {};\n  }\n\n  /**\n   * Process a form submit event\n   * @param {String} accessCode Access code of the instrument\n   * @param {Object} submittedForm (Optional) object with two values: event and form.\n   *                               This form is used instead of waiting for a new\n   *                               submit event.\n   */\n  async processFormSubmit(accessCode, submittedForm = null) {\n    let lastError = null;\n    for (let i = 0; i < this.api.maxSubmitRetries; i += 1) {\n      // Use already submitted form or wait for the form to submit\n      // Only in first attempt\n      const { form } = (i === 0 && submittedForm)\n        ? submittedForm : await this.waitForInstrumentToSubmit();\n\n      try {\n        const result = await tryAtMost(this.api.maxHttpRetries, this.api.retryDelay, () =>\n          this.submitInstrumentData(accessCode, form),\n        );\n        return result;\n      } catch (error) {\n        switch (error.status) {\n          case 404:\n            this.triggerEvent('instrument-run-not-found', null, 'error');\n            // We cannot recover from a 404 in this state, throw error to break loop\n            throw error;\n          default:\n            this.triggerEvent('instrument-submit-failed', null, 'error');\n            break;\n        }\n        // Save error for later, we first let the user retry\n        lastError = error;\n      }\n    }\n    // Failed after max attempts, throw last error\n    throw lastError;\n  }\n\n  /**\n   * (Async) Request a product from the api\n   *\n   * Promise returns an object contains all the instruments\n   * @param  {String} productId      ID of the product\n   * @param  {String} user UUID v4\n   * @return {Promise}\n   */\n  async requestProduct(productId, user) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n      'X-123test-ProductId': productId,\n    };\n    if (user && user.length === 36) {\n      headers['X-123test-Respondent'] = user;\n    }\n\n    try {\n      const response = await request(`${this.api.endpoint}/product/request-product`, {\n        method: 'GET',\n        mode: 'cors',\n        headers,\n      });\n\n      const json = await response.json();\n\n      return {\n        slots: json.slots,\n        reports: json.reports,\n        product_access_code: json.product_access_code,\n      };\n    } catch (error) {\n      switch (error.status) {\n        case 401:\n          this.triggerEvent('invalid-api-key', error.response, 'error');\n          break;\n        case 400:\n          this.triggerEvent('product-not-found', error.response, 'error');\n          break;\n        case 403:\n          this.triggerEvent('product-no-access', error.response, 'error');\n          break;\n        default:\n          // Do nothing\n      }\n      // Bubble-up error\n      throw error;\n    }\n  }\n\n  /**\n   * Get information about a specific product running\n   * @param  {String} accessCode Access code for product run\n   * @return {Promise}\n   */\n  async requestProductInfo(accessCode) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n    };\n\n    const response = await request(`${this.api.endpoint}/product/${accessCode}/overview`, {\n      method: 'GET',\n      mode: 'cors',\n      headers,\n    });\n\n    const json = await response.json();\n\n    return {\n      slots: json.slots,\n      reports: json.reports,\n      product_access_code: json.product_access_code,\n    };\n  }\n\n  /**\n   * (Async) Request an instrument from the api\n   *\n   * Promise returns body and resources that need to be loaded\n   * @param  {String} accessCode Access code for the instrument\n   * @return {Promise}\n   */\n  async requestInstrument(accessCode) {\n    const response = await request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    });\n\n    const body = await response.text();\n    return {\n      body,\n      status: response.headers.get('X-123test-InstrumentStatus'),\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Attach a listener to the instrument, makes use of a promise that resolves\n   * when the button is clicked.\n   * @return {Promise}\n   */\n  waitForInstrumentToSubmit() {\n    const className = 'its123-disabled-loading';\n    const loadingIcon = '<div class=\"its123-loading-spinner\"><div></div><div></div><div></div></div>';\n    const form = document.querySelector(this.api.elements.instrumentFormSelector);\n    const button = form.querySelector('button[type=submit]');\n\n    // Re-enable button if it was previously disabled by this function\n    if (button.classList.contains(className)) {\n      button.disabled = false;\n      button.innerHTML = (button.getAttribute('data-label')) ?\n        button.getAttribute('data-label') : button.innerText;\n      button.classList.remove(className);\n    }\n\n    // Return a new promise that resolves when the submit button is clicked\n    return new Promise((resolve) => {\n      form.addEventListener('submit', (event) => {\n        event.preventDefault();\n\n        // Disable submit button and add class so that we know that\n        // the api js disabled the button (and not individual instrument js)\n        button.disabled = true;\n        button.classList.add(className);\n        // Save content to an attribute to reset it later\n        if (!button.getAttribute('data-label')) {\n          button.setAttribute('data-label', button.innerText);\n        }\n        button.innerHTML = loadingIcon;\n\n        resolve({ form, event });\n      });\n    });\n  }\n\n  /**\n   * Submit a form to the API for a given instrument\n   * @param  {String} accessCode Access code of the instrument\n   * @param  {Object} form       HTML Form\n   * @return {Promise}\n   */\n  async submitInstrumentData(accessCode, form) {\n    this.triggerEvent('instrument-submitting', accessCode);\n\n    const response = await request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'POST',\n      cache: 'no-cache',\n      body: new FormData(form),\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    });\n\n    const body = await response.text();\n\n    return {\n      body,\n      status: response.headers.get('X-123test-InstrumentStatus'),\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Output an instrument to the DOM\n   * @param  {String} body Instrument HTML\n   * @return {void}\n   */\n  renderInstrument(body) {\n    this.api.elements.productElement.innerHTML = body;\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.productElement.style.display = 'block';\n    this.api.elements.reportElement.style.display = 'none';\n  }\n\n  /**\n   * Add event listeners to radio buttons in instruments\n   * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n   * @return {null}\n   */\n  bindInstrumentStorageListeners(prefix) {\n    if (!this.api.storageEnabled) {\n      return;\n    }\n\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    for (let e = 0; e < elements.length; e += 1) {\n      const input = elements[e];\n\n      if (input.type === 'radio') {\n        // Sync store with current value of the input element\n        if (input.checked) {\n          this.store.set(`${prefix}-${input.name}`, input.value);\n        }\n        input.addEventListener('change', () => {\n          this.store.set(`${prefix}-${input.name}`, input.value);\n        });\n      }\n    }\n  }\n\n  /**\n   * Apply stored instrument state to the DOM\n   * @param  {String} prefix Prefix string to for the store key (usually accessCode)\n   * @return {null}\n   */\n  loadInstrumentStateFromStorage(prefix) {\n    if (!this.api.storageEnabled) {\n      return;\n    }\n\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    let loaded = false;\n    for (let e = 0; e < elements.length; e += 1) {\n      const input = elements[e];\n      const value = this.store.get(`${prefix}-${input.name}`);\n\n      if (value !== null && input.type === 'radio' && input.value === value) {\n        input.checked = true;\n        loaded = true;\n      }\n    }\n\n    if (loaded) {\n      this.triggerEvent('instrument-item-data-loaded', prefix);\n    }\n  }\n\n  /**\n   * Render a report to the DOM\n   *\n   * @param  {String} body report body\n   * @return {Promise}\n   */\n  renderReport(body) {\n    this.api.elements.productElement.style.display = 'none';\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.reportElement.innerHTML = body;\n    this.api.elements.reportElement.style.display = 'block';\n  }\n\n  /**\n   * Add new resources to the DOM\n   *\n   * Returns a new Promise that resolves when all critical assets have been loaded\n   * @param  {Object} resources The resources to load\n   * @return {void}\n   */\n  static loadResources(resources) {\n    if (!resources) {\n      return null;\n    }\n\n    // Map each resource to a new Promise\n    // JS resources resolve when loaded\n    return Promise.all(Object.keys(resources).map(key => (\n      new Promise((resolve, reject) => {\n        const resourceItem = resources[key];\n        const head = document.getElementsByTagName('head')[0];\n\n        // Do not load resources that are already present\n        if (document.querySelectorAll(`script[src=\"${resourceItem.path}\"]`).length > 0) {\n          resolve();\n          return;\n        }\n        switch (resourceItem.type) {\n          case 'js': {\n            const script = document.createElement('script');\n            script.src = resourceItem.path;\n            // Allow some files to not load asynchronous\n            script.async = resourceItem.async || false;\n            // Resolve when loaded\n            script.onload = resolve;\n            // Append to the head of the page\n            head.appendChild(script);\n          }\n            break;\n          case 'css': {\n            const cssLink = document.createElement('link');\n            cssLink.rel = 'stylesheet';\n            cssLink.type = 'text/css';\n            cssLink.media = 'all';\n            cssLink.href = resourceItem.path;\n            // Append to the head of the page\n            head.appendChild(cssLink);\n\n            // Directy resolve css, not critical\n            resolve();\n          }\n            break;\n          default:\n            reject(`Unknown resource type ${resourceItem.type}`);\n        }\n      })\n    )));\n  }\n\n  /**\n   * Run functions for a list of JS resources\n   * @param  {Object} resources\n   * @return {void}\n   */\n  runResourceFunctions(resources) {\n    Object.keys(resources).forEach((key) => {\n      const resource = resources[key];\n      if (resource.type === 'js'\n        && typeof window.its123[resource.func] === 'function') {\n        // Give context as variable\n        window.its123[resource.func](this.api, this);\n      }\n    });\n  }\n\n  /**\n   * Request a report by its access code\n   * @param  {String} accessCode access code for the report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  async requestReport(accessCode, { metaData = '', metaHmac = '' } = {}) {\n    let url;\n    if (metaData.length <= 0 || metaHmac.length <= 0) {\n      url = `${this.api.endpoint}/report/${accessCode}`;\n    } else {\n      url = `${this.api.endpoint}/report/${accessCode}?meta=${metaData}&meta_hmac=${metaHmac}`;\n    }\n\n    const response = await request(url, {\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n      },\n      method: 'GET',\n      mode: 'cors',\n    });\n\n    const body = await response.text();\n\n    return {\n      body,\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Log an exception and retrow\n   * @param  {String} id Error id\n   * @param  {Object} e The error\n   * @param {Object} param Invoked parameter data\n   * @return null\n   */\n  async handleException(id, e, param = {}) {\n    switch (e.status) {\n      case 401:\n      case 403:\n        this.log('error', `123test API Permission error: ${e.message} (${e.status})`);\n        this.triggerEvent('api-permission', { status: 403, message: `${location.hostname} ${this.api.apiKey} ${this.api.productId}` }, 'error');\n        return;\n      case 404:\n        this.log('error', `123test API Product error: ${e.message} (${e.status})`);\n        break;\n      case 408:\n      case 503:\n        this.log('error', '123test API Server error: API is unavailable');\n        this.triggerEvent('api-unavailable', e, 'error');\n        return;\n      case 500:\n        this.log('error', `123test API Server error: ${e.message} (${e.status})`);\n        break;\n      default:\n        break;\n    }\n\n    // Trigger that a unhandled exception has occurred\n    this.log('error', `123test API Server error: Error Unknown, ${param}`);\n    this.triggerEvent('api-unavailable', e, 'error');\n  }\n\n  /**\n   * Utility function to get the url to a PDF report for a given product object\n   * @param  {Object} product               The product that contains the report list\n   * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n   * @return {String}                       Url to the report\n   */\n  getPdfUrl(product, typeName = 'standard') {\n    // Get correct type id for premium or standard pdf\n    const type = (typeName === 'premium') ? 221 : 121;\n    const report = product.reports.find(r => r.type === type);\n\n    if (!report) {\n      throw new Error('No access code for pdf is present in product object.');\n    }\n\n    return `${this.api.endpoint}/report/${report.access_code}`;\n  }\n\n  /**\n   * Send a new event to the listeners\n   * @param  {String} eventName Name of the event\n   * @param  {Object} data      Optional event data\n   * @param  {String} type      Event type\n   * @return {void}\n   */\n  triggerEvent(eventName, data, type = 'info') {\n    const listeners = this.eventListeners[eventName];\n\n    if (listeners && listeners.length > 0) {\n      listeners.forEach(l => l(data));\n    }\n\n    this.log(type, `Event triggered: ${eventName}`);\n  }\n\n  /**\n   * Ouputs a message to the console based on the log logLevel\n   * @param  {String} type    Type of the message\n   * @param  {String} message The message itself\n   * @return {null}\n   */\n  log(type, message) {\n    switch (type) {\n      case 'error':\n        if (this.api.logLevel !== 'none') {\n          console.error(message);\n        }\n        break;\n\n      case 'info':\n      default:\n        if (this.api.logLevel !== 'error' || this.api.logLevel !== 'none') {\n          console.info(message);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Register a new event listener\n   * @param  {String|Array}   eventName Name of the event\n   * @param  {Function} callback\n   * @return {void}\n   */\n  on(eventName, callback) {\n    let events = [];\n\n    if (Array.isArray(eventName)) {\n      events = eventName;\n    } else {\n      events.push(eventName);\n    }\n\n    events.forEach((event) => {\n      if (!this.eventListeners[event]) {\n        this.eventListeners[event] = [];\n      }\n\n      this.eventListeners[event].push(callback);\n    });\n  }\n}\n\nexport default Its123;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Its123.js","import { timeoutPromise } from './promise';\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  error.status = response.status;\n\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n * @return {object}           The response data\n */\nexport default function request(url, options = {}, timeout = 8000) {\n  return timeoutPromise(timeout, fetch(url, options)\n    .then(checkStatus));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/request.js","/**\n * Utility wrapper around localStorage.\n *\n * Adds convenience functions to save and retrieve items\n * from the local storage store.\n */\nclass ClientStorage {\n\n  constructor(enabled = true, prefix = 'its123') {\n    this.store = window.localStorage;\n    this.storeEnabled = enabled;\n    this.prefix = prefix;\n\n    if (this.storeEnabled) {\n      // Test availability of local storage\n      const testItem = 'test';\n      try {\n        this.store.setItem(testItem, testItem);\n        this.store.removeItem(testItem);\n        this.storeEnabled = true;\n      } catch (e) {\n        this.storeEnabled = false;\n      }\n    }\n  }\n\n  /**\n   * Store a product in the local storage\n   * @param  {String} productId Id of the product\n   * @param  {object} product   Product information\n   * @param  {String} user      User UUID\n   * @return {void}\n   */\n  saveProduct(productId, product, user) {\n    // Add new record\n    const productData = {\n      ...product,\n      user,\n      started: Date.now(),\n    };\n\n    this.set(productId, JSON.stringify(productData));\n  }\n\n  /**\n   * Load a product from the storage\n   *\n   * @param  {String} productId             Product id\n   * @param  {String} [user='']             User UUID\n   * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n   * @return {null|Object}\n   */\n  loadProduct(productId, user = '', expirationTime = 3600) {\n    const item = this.get(productId);\n\n    // Check presence of object\n    if (!item) {\n      return null;\n    }\n\n    const product = JSON.parse(item);\n\n    if (product && (product.started + (expirationTime * 1000)) > Date.now()\n      && product.user === user) {\n      return product;\n    }\n\n    return null;\n  }\n\n  /**\n   * Set the current state of an instrument in storage\n   * @param  {String} accessCode Access code for instrument\n   * @param  {String} status     Status indicator\n   * @return {void}\n   */\n  saveInstrumentStatus(accessCode, status) {\n    this.set(accessCode, status);\n  }\n\n  /**\n   * Get status of an instrument from storage\n   * @param  {String} accessCode Access code for instrument\n   * @return {String|null} Status\n   */\n  loadInstrumentStatus(accessCode) {\n    return this.get(accessCode);\n  }\n\n  /**\n   * Save an item to storage\n   * @param  {String} id   identifier\n   * @param  {mixed} item Value to store\n   * @return {null}\n   */\n  set(id, item) {\n    if (!this.storeEnabled) {\n      return;\n    }\n\n    this.store.setItem(`${this.prefix}-${id}`, item);\n  }\n\n  /**\n   * Retrieve an item from storage\n   * @param  {String} id Storage identifier\n   * @return {mixed}    The value\n   */\n  get(id) {\n    if (!this.storeEnabled) {\n      return null;\n    }\n\n    return this.store.getItem(`${this.prefix}-${id}`);\n  }\n\n  /**\n   * Remove item from storage\n   * @param  {String} id Storage identifier\n   * @return {null}\n   */\n  remove(id) {\n    if (!this.storeEnabled) {\n      return;\n    }\n\n    this.store.removeItem(`${this.prefix}-${id}`);\n  }\n\n  /**\n   * Remove all local storage elements that start with a given prefix\n   * @param  {String} prefix Prefix to search for\n   * @return {null}\n   */\n  removeByPrefix(prefix) {\n    if (!this.storeEnabled) {\n      return;\n    }\n\n    for (let i = this.store.length - 1; i >= 0; i -= 1) {\n      if (this.store.key(i).startsWith(`${this.prefix}-${prefix}`)) {\n        this.store.removeItem(this.store.key(i));\n      }\n    }\n  }\n\n  /**\n   * Clear the local storage of all items associated with a product id\n   * @return {void}\n   */\n  clearProduct(productId) {\n    const productJson = this.get(productId);\n\n    if (!productJson) {\n      return;\n    }\n\n    const product = JSON.parse(productJson);\n    product.slots.instruments.forEach((i) => {\n      this.remove(i.access_code);\n      this.removeByPrefix(i.access_code);\n    });\n    this.remove(productId);\n  }\n}\n\nexport default ClientStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/storage.js","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 32\n// module chunks = 0 1 2"],"sourceRoot":""}